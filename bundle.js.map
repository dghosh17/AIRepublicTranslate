{"version":3,"file":"bundle.js","sources":["node_modules/svelte/src/version.js","node_modules/svelte/src/internal/disclose-version.js","node_modules/svelte/src/constants.js","node_modules/esm-env/browser.js","node_modules/svelte/src/internal/shared/utils.js","node_modules/svelte/src/internal/client/constants.js","node_modules/svelte/src/internal/client/reactivity/equality.js","node_modules/svelte/src/internal/client/errors.js","node_modules/svelte/src/internal/client/reactivity/sources.js","node_modules/svelte/src/internal/client/reactivity/deriveds.js","node_modules/svelte/src/internal/client/reactivity/effects.js","node_modules/svelte/src/internal/client/dom/task.js","node_modules/svelte/src/internal/client/runtime.js","node_modules/svelte/src/internal/client/dom/operations.js","node_modules/svelte/src/internal/client/dom/elements/events.js","node_modules/svelte/src/internal/client/dom/reconciler.js","node_modules/svelte/src/internal/client/dom/template.js","node_modules/svelte/src/internal/client/render.js","node_modules/svelte/src/internal/client/dom/elements/misc.js","node_modules/svelte/src/internal/client/dom/elements/bindings/shared.js","node_modules/svelte/src/internal/client/dom/elements/bindings/input.js","popup.svelte","popup.js"],"sourcesContent":["// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '5.1.10';\nexport const PUBLIC_VERSION = '5';\n","import { PUBLIC_VERSION } from '../version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte ||= { v: new Set() }).v.add(PUBLIC_VERSION);\n","export const EACH_ITEM_REACTIVE = 1;\nexport const EACH_INDEX_REACTIVE = 1 << 1;\n/** See EachBlock interface metadata.is_controlled for an explanation what this is */\nexport const EACH_IS_CONTROLLED = 1 << 2;\nexport const EACH_IS_ANIMATED = 1 << 3;\nexport const EACH_ITEM_IMMUTABLE = 1 << 4;\n\nexport const PROPS_IS_IMMUTABLE = 1;\nexport const PROPS_IS_RUNES = 1 << 1;\nexport const PROPS_IS_UPDATED = 1 << 2;\nexport const PROPS_IS_BINDABLE = 1 << 3;\nexport const PROPS_IS_LAZY_INITIAL = 1 << 4;\n\nexport const TRANSITION_IN = 1;\nexport const TRANSITION_OUT = 1 << 1;\nexport const TRANSITION_GLOBAL = 1 << 2;\n\nexport const TEMPLATE_FRAGMENT = 1;\nexport const TEMPLATE_USE_IMPORT_NODE = 1 << 1;\n\nexport const HYDRATION_START = '[';\n/** used to indicate that an `{:else}...` block was rendered */\nexport const HYDRATION_START_ELSE = '[!';\nexport const HYDRATION_END = ']';\nexport const HYDRATION_ERROR = {};\n\nexport const ELEMENT_IS_NAMESPACED = 1;\nexport const ELEMENT_PRESERVE_ATTRIBUTE_CASE = 1 << 1;\n\nexport const UNINITIALIZED = Symbol();\n\n// Dev-time component properties\nexport const FILENAME = Symbol('filename');\nexport const HMR = Symbol('hmr');\n\nexport const NAMESPACE_SVG = 'http://www.w3.org/2000/svg';\nexport const NAMESPACE_MATHML = 'http://www.w3.org/1998/Math/MathML';\n\n// we use a list of ignorable runtime warnings because not every runtime warning\n// can be ignored and we want to keep the validation for svelte-ignore in place\nexport const IGNORABLE_RUNTIME_WARNINGS = /** @type {const} */ ([\n\t'state_snapshot_uncloneable',\n\t'binding_property_non_reactive',\n\t'hydration_attribute_changed',\n\t'hydration_html_changed',\n\t'ownership_invalid_binding',\n\t'ownership_invalid_mutation'\n]);\n\n/**\n * Whitespace inside one of these elements will not result in\n * a whitespace node being created in any circumstances. (This\n * list is almost certainly very incomplete)\n * TODO this is currently unused\n */\nexport const ELEMENTS_WITHOUT_TEXT = ['audio', 'datalist', 'dl', 'optgroup', 'select', 'video'];\n","export const BROWSER = true;\nexport const DEV = false;\nexport const NODE = false;\n","// Store the references to globals in case someone tries to monkey patch these, causing the below\n// to de-opt (this occurs often when using popular extensions).\nexport var is_array = Array.isArray;\nexport var array_from = Array.from;\nexport var object_keys = Object.keys;\nexport var define_property = Object.defineProperty;\nexport var get_descriptor = Object.getOwnPropertyDescriptor;\nexport var get_descriptors = Object.getOwnPropertyDescriptors;\nexport var object_prototype = Object.prototype;\nexport var array_prototype = Array.prototype;\nexport var get_prototype_of = Object.getPrototypeOf;\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\nexport const noop = () => {};\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n\n/**\n * @template [T=any]\n * @param {any} value\n * @returns {value is PromiseLike<T>}\n */\nexport function is_promise(value) {\n\treturn typeof value?.then === 'function';\n}\n\n/** @param {Function} fn */\nexport function run(fn) {\n\treturn fn();\n}\n\n/** @param {Array<() => void>} arr */\nexport function run_all(arr) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tarr[i]();\n\t}\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {V | (() => V)} fallback\n * @param {boolean} [lazy]\n * @returns {V}\n */\nexport function fallback(value, fallback, lazy = false) {\n\treturn value === undefined\n\t\t? lazy\n\t\t\t? /** @type {() => V} */ (fallback)()\n\t\t\t: /** @type {V} */ (fallback)\n\t\t: value;\n}\n","export const DERIVED = 1 << 1;\nexport const EFFECT = 1 << 2;\nexport const RENDER_EFFECT = 1 << 3;\nexport const BLOCK_EFFECT = 1 << 4;\nexport const BRANCH_EFFECT = 1 << 5;\nexport const ROOT_EFFECT = 1 << 6;\nexport const UNOWNED = 1 << 7;\nexport const DISCONNECTED = 1 << 8;\nexport const CLEAN = 1 << 9;\nexport const DIRTY = 1 << 10;\nexport const MAYBE_DIRTY = 1 << 11;\nexport const INERT = 1 << 12;\nexport const DESTROYED = 1 << 13;\nexport const EFFECT_RAN = 1 << 14;\n/** 'Transparent' effects do not create a transition boundary */\nexport const EFFECT_TRANSPARENT = 1 << 15;\n/** Svelte 4 legacy mode props need to be handled with deriveds and be recognized elsewhere, hence the dedicated flag */\nexport const LEGACY_DERIVED_PROP = 1 << 16;\nexport const INSPECT_EFFECT = 1 << 17;\nexport const HEAD_EFFECT = 1 << 18;\nexport const EFFECT_HAS_DERIVED = 1 << 19;\n\nexport const STATE_SYMBOL = Symbol('$state');\nexport const STATE_SYMBOL_METADATA = Symbol('$state metadata');\nexport const LOADING_ATTR_SYMBOL = Symbol('');\n","/** @import { Equals } from '#client' */\n/** @type {Equals} */\nexport function equals(value) {\n\treturn value === this.v;\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function safe_not_equal(a, b) {\n\treturn a != a\n\t\t? b == b\n\t\t: a !== b || (a !== null && typeof a === 'object') || typeof a === 'function';\n}\n\n/** @type {Equals} */\nexport function safe_equals(value) {\n\treturn !safe_not_equal(value, this.v);\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Using `bind:value` together with a checkbox input is not allowed. Use `bind:checked` instead\n * @returns {never}\n */\nexport function bind_invalid_checkbox_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_checkbox_value\\nUsing \\`bind:value\\` together with a checkbox input is not allowed. Use \\`bind:checked\\` instead`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"bind_invalid_checkbox_value\");\n\t}\n}\n\n/**\n * Component %component% has an export named `%key%` that a consumer component is trying to access using `bind:%key%`, which is disallowed. Instead, use `bind:this` (e.g. `<%name% bind:this={component} />`) and then access the property on the bound component instance (e.g. `component.%key%`)\n * @param {string} component\n * @param {string} key\n * @param {string} name\n * @returns {never}\n */\nexport function bind_invalid_export(component, key, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_export\\nComponent ${component} has an export named \\`${key}\\` that a consumer component is trying to access using \\`bind:${key}\\`, which is disallowed. Instead, use \\`bind:this\\` (e.g. \\`<${name} bind:this={component} />\\`) and then access the property on the bound component instance (e.g. \\`component.${key}\\`)`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"bind_invalid_export\");\n\t}\n}\n\n/**\n * A component is attempting to bind to a non-bindable property `%key%` belonging to %component% (i.e. `<%name% bind:%key%={...}>`). To mark a property as bindable: `let { %key% = $bindable() } = $props()`\n * @param {string} key\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function bind_not_bindable(key, component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_not_bindable\\nA component is attempting to bind to a non-bindable property \\`${key}\\` belonging to ${component} (i.e. \\`<${name} bind:${key}={...}>\\`). To mark a property as bindable: \\`let { ${key} = $bindable() } = $props()\\``);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"bind_not_bindable\");\n\t}\n}\n\n/**\n * %parent% called `%method%` on an instance of %component%, which is no longer valid in Svelte 5. See https://svelte.dev/docs/svelte/v5-migration-guide#Components-are-no-longer-classes for more information\n * @param {string} parent\n * @param {string} method\n * @param {string} component\n * @returns {never}\n */\nexport function component_api_changed(parent, method, component) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_changed\\n${parent} called \\`${method}\\` on an instance of ${component}, which is no longer valid in Svelte 5. See https://svelte.dev/docs/svelte/v5-migration-guide#Components-are-no-longer-classes for more information`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"component_api_changed\");\n\t}\n}\n\n/**\n * Attempted to instantiate %component% with `new %name%`, which is no longer valid in Svelte 5. If this component is not under your control, set the `compatibility.componentApi` compiler option to `4` to keep it working. See https://svelte.dev/docs/svelte/v5-migration-guide#Components-are-no-longer-classes for more information\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function component_api_invalid_new(component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_invalid_new\\nAttempted to instantiate ${component} with \\`new ${name}\\`, which is no longer valid in Svelte 5. If this component is not under your control, set the \\`compatibility.componentApi\\` compiler option to \\`4\\` to keep it working. See https://svelte.dev/docs/svelte/v5-migration-guide#Components-are-no-longer-classes for more information`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"component_api_invalid_new\");\n\t}\n}\n\n/**\n * A derived value cannot reference itself recursively\n * @returns {never}\n */\nexport function derived_references_self() {\n\tif (DEV) {\n\t\tconst error = new Error(`derived_references_self\\nA derived value cannot reference itself recursively`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"derived_references_self\");\n\t}\n}\n\n/**\n * Keyed each block has duplicate key `%value%` at indexes %a% and %b%\n * @param {string} a\n * @param {string} b\n * @param {string | undefined | null} [value]\n * @returns {never}\n */\nexport function each_key_duplicate(a, b, value) {\n\tif (DEV) {\n\t\tconst error = new Error(`each_key_duplicate\\n${value ? `Keyed each block has duplicate key \\`${value}\\` at indexes ${a} and ${b}` : `Keyed each block has duplicate key at indexes ${a} and ${b}`}`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"each_key_duplicate\");\n\t}\n}\n\n/**\n * `%rune%` cannot be used inside an effect cleanup function\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_in_teardown(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_teardown\\n\\`${rune}\\` cannot be used inside an effect cleanup function`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"effect_in_teardown\");\n\t}\n}\n\n/**\n * Effect cannot be created inside a `$derived` value that was not itself created inside an effect\n * @returns {never}\n */\nexport function effect_in_unowned_derived() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_unowned_derived\\nEffect cannot be created inside a \\`$derived\\` value that was not itself created inside an effect`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"effect_in_unowned_derived\");\n\t}\n}\n\n/**\n * `%rune%` can only be used inside an effect (e.g. during component initialisation)\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_orphan(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_orphan\\n\\`${rune}\\` can only be used inside an effect (e.g. during component initialisation)`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"effect_orphan\");\n\t}\n}\n\n/**\n * Maximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\n * @returns {never}\n */\nexport function effect_update_depth_exceeded() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_update_depth_exceeded\\nMaximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"effect_update_depth_exceeded\");\n\t}\n}\n\n/**\n * Failed to hydrate the application\n * @returns {never}\n */\nexport function hydration_failed() {\n\tif (DEV) {\n\t\tconst error = new Error(`hydration_failed\\nFailed to hydrate the application`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"hydration_failed\");\n\t}\n}\n\n/**\n * Could not `{@render}` snippet due to the expression being `null` or `undefined`. Consider using optional chaining `{@render snippet?.()}`\n * @returns {never}\n */\nexport function invalid_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_snippet\\nCould not \\`{@render}\\` snippet due to the expression being \\`null\\` or \\`undefined\\`. Consider using optional chaining \\`{@render snippet?.()}\\``);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"invalid_snippet\");\n\t}\n}\n\n/**\n * `%name%(...)` cannot be used in runes mode\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_legacy_only(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_legacy_only\\n\\`${name}(...)\\` cannot be used in runes mode`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"lifecycle_legacy_only\");\n\t}\n}\n\n/**\n * Cannot do `bind:%key%={undefined}` when `%key%` has a fallback value\n * @param {string} key\n * @returns {never}\n */\nexport function props_invalid_value(key) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_invalid_value\\nCannot do \\`bind:${key}={undefined}\\` when \\`${key}\\` has a fallback value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"props_invalid_value\");\n\t}\n}\n\n/**\n * Rest element properties of `$props()` such as `%property%` are readonly\n * @param {string} property\n * @returns {never}\n */\nexport function props_rest_readonly(property) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_rest_readonly\\nRest element properties of \\`$props()\\` such as \\`${property}\\` are readonly`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"props_rest_readonly\");\n\t}\n}\n\n/**\n * The `%rune%` rune is only available inside `.svelte` and `.svelte.js/ts` files\n * @param {string} rune\n * @returns {never}\n */\nexport function rune_outside_svelte(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`rune_outside_svelte\\nThe \\`${rune}\\` rune is only available inside \\`.svelte\\` and \\`.svelte.js/ts\\` files`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"rune_outside_svelte\");\n\t}\n}\n\n/**\n * Property descriptors defined on `$state` objects must contain `value` and always be `enumerable`, `configurable` and `writable`.\n * @returns {never}\n */\nexport function state_descriptors_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_descriptors_fixed\\nProperty descriptors defined on \\`$state\\` objects must contain \\`value\\` and always be \\`enumerable\\`, \\`configurable\\` and \\`writable\\`.`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"state_descriptors_fixed\");\n\t}\n}\n\n/**\n * Cannot set prototype of `$state` object\n * @returns {never}\n */\nexport function state_prototype_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_prototype_fixed\\nCannot set prototype of \\`$state\\` object`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"state_prototype_fixed\");\n\t}\n}\n\n/**\n * Reading state that was created inside the same derived is forbidden. Consider using `untrack` to read locally created state\n * @returns {never}\n */\nexport function state_unsafe_local_read() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_local_read\\nReading state that was created inside the same derived is forbidden. Consider using \\`untrack\\` to read locally created state`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"state_unsafe_local_read\");\n\t}\n}\n\n/**\n * Updating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without `$state`\n * @returns {never}\n */\nexport function state_unsafe_mutation() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_mutation\\nUpdating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without \\`$state\\``);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"state_unsafe_mutation\");\n\t}\n}","/** @import { Derived, Effect, Reaction, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tcomponent_context,\n\tactive_reaction,\n\tnew_deps,\n\tactive_effect,\n\tuntracked_writes,\n\tget,\n\tis_runes,\n\tschedule_effect,\n\tset_untracked_writes,\n\tset_signal_status,\n\tuntrack,\n\tincrement_version,\n\tupdate_effect,\n\tderived_sources,\n\tset_derived_sources,\n\tcheck_dirtiness,\n\tset_is_flushing_effect,\n\tis_flushing_effect\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tINSPECT_EFFECT,\n\tUNOWNED,\n\tMAYBE_DIRTY,\n\tBLOCK_EFFECT\n} from '../constants.js';\nimport * as e from '../errors.js';\n\nexport let inspect_effects = new Set();\n\n/**\n * @param {Set<any>} v\n */\nexport function set_inspect_effects(v) {\n\tinspect_effects = v;\n}\n\n/**\n * @template V\n * @param {V} v\n * @returns {Source<V>}\n */\nexport function source(v) {\n\treturn {\n\t\tf: 0, // TODO ideally we could skip this altogether, but it causes type errors\n\t\tv,\n\t\treactions: null,\n\t\tequals,\n\t\tversion: 0\n\t};\n}\n\n/**\n * @template V\n * @param {V} v\n */\nexport function state(v) {\n\treturn push_derived_source(source(v));\n}\n\n/**\n * @template V\n * @param {V} initial_value\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mutable_source(initial_value, immutable = false) {\n\tconst s = source(initial_value);\n\tif (!immutable) {\n\t\ts.equals = safe_equals;\n\t}\n\n\t// bind the signal to the component context, in case we need to\n\t// track updates to trigger beforeUpdate/afterUpdate callbacks\n\tif (component_context !== null && component_context.l !== null) {\n\t\t(component_context.l.s ??= []).push(s);\n\t}\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\nexport function mutable_state(v, immutable = false) {\n\treturn push_derived_source(mutable_source(v, immutable));\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n */\n/*#__NO_SIDE_EFFECTS__*/\nfunction push_derived_source(source) {\n\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\tif (derived_sources === null) {\n\t\t\tset_derived_sources([source]);\n\t\t} else {\n\t\t\tderived_sources.push(source);\n\t\t}\n\t}\n\n\treturn source;\n}\n\n/**\n * @template V\n * @param {Value<V>} source\n * @param {V} value\n */\nexport function mutate(source, value) {\n\tset(\n\t\tsource,\n\t\tuntrack(() => get(source))\n\t);\n\treturn value;\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function set(source, value) {\n\tif (\n\t\tactive_reaction !== null &&\n\t\tis_runes() &&\n\t\t(active_reaction.f & (DERIVED | BLOCK_EFFECT)) !== 0 &&\n\t\t// If the source was created locally within the current derived, then\n\t\t// we allow the mutation.\n\t\t(derived_sources === null || !derived_sources.includes(source))\n\t) {\n\t\te.state_unsafe_mutation();\n\t}\n\n\treturn internal_set(source, value);\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function internal_set(source, value) {\n\tif (!source.equals(value)) {\n\t\tsource.v = value;\n\t\tsource.version = increment_version();\n\n\t\tmark_reactions(source, DIRTY);\n\n\t\t// If the current signal is running for the first time, it won't have any\n\t\t// reactions as we only allocate and assign the reactions after the signal\n\t\t// has fully executed. So in the case of ensuring it registers the reaction\n\t\t// properly for itself, we need to ensure the current effect actually gets\n\t\t// scheduled. i.e: `$effect(() => x++)`\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tactive_effect !== null &&\n\t\t\t(active_effect.f & CLEAN) !== 0 &&\n\t\t\t(active_effect.f & BRANCH_EFFECT) === 0\n\t\t) {\n\t\t\tif (new_deps !== null && new_deps.includes(source)) {\n\t\t\t\tset_signal_status(active_effect, DIRTY);\n\t\t\t\tschedule_effect(active_effect);\n\t\t\t} else {\n\t\t\t\tif (untracked_writes === null) {\n\t\t\t\t\tset_untracked_writes([source]);\n\t\t\t\t} else {\n\t\t\t\t\tuntracked_writes.push(source);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (DEV && inspect_effects.size > 0) {\n\t\t\tconst inspects = Array.from(inspect_effects);\n\t\t\tvar previously_flushing_effect = is_flushing_effect;\n\t\t\tset_is_flushing_effect(true);\n\t\t\ttry {\n\t\t\t\tfor (const effect of inspects) {\n\t\t\t\t\t// Mark clean inspect-effects as maybe dirty and then check their dirtiness\n\t\t\t\t\t// instead of just updating the effects - this way we avoid overfiring.\n\t\t\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t\t\t}\n\t\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\t\tupdate_effect(effect);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_is_flushing_effect(previously_flushing_effect);\n\t\t\t}\n\t\t\tinspect_effects.clear();\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Value} signal\n * @param {number} status should be DIRTY or MAYBE_DIRTY\n * @returns {void}\n */\nfunction mark_reactions(signal, status) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tvar runes = is_runes();\n\tvar length = reactions.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tvar flags = reaction.f;\n\n\t\t// Skip any effects that are already dirty\n\t\tif ((flags & DIRTY) !== 0) continue;\n\n\t\t// In legacy mode, skip the current effect to prevent infinite loops\n\t\tif (!runes && reaction === active_effect) continue;\n\n\t\t// Inspect effects need to run immediately, so that the stack trace makes sense\n\t\tif (DEV && (flags & INSPECT_EFFECT) !== 0) {\n\t\t\tinspect_effects.add(reaction);\n\t\t\tcontinue;\n\t\t}\n\n\t\tset_signal_status(reaction, status);\n\n\t\t// If the signal a) was previously clean or b) is an unowned derived, then mark it\n\t\tif ((flags & (CLEAN | UNOWNED)) !== 0) {\n\t\t\tif ((flags & DERIVED) !== 0) {\n\t\t\t\tmark_reactions(/** @type {Derived} */ (reaction), MAYBE_DIRTY);\n\t\t\t} else {\n\t\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @import { Derived, Effect } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDESTROYED,\n\tDIRTY,\n\tEFFECT_HAS_DERIVED,\n\tMAYBE_DIRTY,\n\tUNOWNED\n} from '../constants.js';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tremove_reactions,\n\tset_signal_status,\n\tskip_reaction,\n\tupdate_reaction,\n\tincrement_version,\n\tset_active_effect,\n\tcomponent_context\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { destroy_effect } from './effects.js';\nimport { inspect_effects, set_inspect_effects } from './sources.js';\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived(fn) {\n\tvar flags = DERIVED | DIRTY;\n\n\tif (active_effect === null) {\n\t\tflags |= UNOWNED;\n\t} else {\n\t\t// Since deriveds are evaluated lazily, any effects created inside them are\n\t\t// created too late to ensure that the parent effect is added to the tree\n\t\tactive_effect.f |= EFFECT_HAS_DERIVED;\n\t}\n\n\t/** @type {Derived<V>} */\n\tconst signal = {\n\t\tchildren: null,\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\tequals,\n\t\tf: flags,\n\t\tfn,\n\t\treactions: null,\n\t\tv: /** @type {V} */ (null),\n\t\tversion: 0,\n\t\tparent: active_effect\n\t};\n\n\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\tvar derived = /** @type {Derived} */ (active_reaction);\n\t\t(derived.children ??= []).push(signal);\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived_safe_equal(fn) {\n\tconst signal = derived(fn);\n\tsignal.equals = safe_equals;\n\treturn signal;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nfunction destroy_derived_children(derived) {\n\tvar children = derived.children;\n\n\tif (children !== null) {\n\t\tderived.children = null;\n\n\t\tfor (var i = 0; i < children.length; i += 1) {\n\t\t\tvar child = children[i];\n\t\t\tif ((child.f & DERIVED) !== 0) {\n\t\t\t\tdestroy_derived(/** @type {Derived} */ (child));\n\t\t\t} else {\n\t\t\t\tdestroy_effect(/** @type {Effect} */ (child));\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * The currently updating deriveds, used to detect infinite recursion\n * in dev mode and provide a nicer error than 'too much recursion'\n * @type {Derived[]}\n */\nlet stack = [];\n\n/**\n * @template T\n * @param {Derived} derived\n * @returns {T}\n */\nexport function execute_derived(derived) {\n\tvar value;\n\tvar prev_active_effect = active_effect;\n\n\tset_active_effect(derived.parent);\n\n\tif (DEV) {\n\t\tlet prev_inspect_effects = inspect_effects;\n\t\tset_inspect_effects(new Set());\n\t\ttry {\n\t\t\tif (stack.includes(derived)) {\n\t\t\t\te.derived_references_self();\n\t\t\t}\n\n\t\t\tstack.push(derived);\n\n\t\t\tdestroy_derived_children(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t\tset_inspect_effects(prev_inspect_effects);\n\t\t\tstack.pop();\n\t\t}\n\t} else {\n\t\ttry {\n\t\t\tdestroy_derived_children(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function update_derived(derived) {\n\tvar value = execute_derived(derived);\n\tvar status =\n\t\t(skip_reaction || (derived.f & UNOWNED) !== 0) && derived.deps !== null ? MAYBE_DIRTY : CLEAN;\n\n\tset_signal_status(derived, status);\n\n\tif (!derived.equals(value)) {\n\t\tderived.v = value;\n\t\tderived.version = increment_version();\n\t}\n}\n\n/**\n * @param {Derived} signal\n * @returns {void}\n */\nexport function destroy_derived(signal) {\n\tdestroy_derived_children(signal);\n\tremove_reactions(signal, 0);\n\tset_signal_status(signal, DESTROYED);\n\n\t// TODO we need to ensure we remove the derived from any parent derives\n\tsignal.v = signal.children = signal.deps = signal.ctx = signal.reactions = null;\n}\n","/** @import { ComponentContext, ComponentContextLegacy, Derived, Effect, Reaction, TemplateNode, TransitionManager } from '#client' */\nimport {\n\tcheck_dirtiness,\n\tcomponent_context,\n\tactive_effect,\n\tactive_reaction,\n\tdev_current_component_function,\n\tupdate_effect,\n\tget,\n\tis_destroying_effect,\n\tis_flushing_effect,\n\tremove_reactions,\n\tschedule_effect,\n\tset_active_reaction,\n\tset_is_destroying_effect,\n\tset_is_flushing_effect,\n\tset_signal_status,\n\tuntrack,\n\tskip_reaction\n} from '../runtime.js';\nimport {\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tRENDER_EFFECT,\n\tEFFECT,\n\tDESTROYED,\n\tINERT,\n\tEFFECT_RAN,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tEFFECT_TRANSPARENT,\n\tDERIVED,\n\tUNOWNED,\n\tCLEAN,\n\tINSPECT_EFFECT,\n\tHEAD_EFFECT,\n\tMAYBE_DIRTY,\n\tEFFECT_HAS_DERIVED\n} from '../constants.js';\nimport { set } from './sources.js';\nimport * as e from '../errors.js';\nimport { DEV } from 'esm-env';\nimport { define_property } from '../../shared/utils.js';\nimport { get_next_sibling } from '../dom/operations.js';\nimport { destroy_derived } from './deriveds.js';\n\n/**\n * @param {'$effect' | '$effect.pre' | '$inspect'} rune\n */\nexport function validate_effect(rune) {\n\tif (active_effect === null && active_reaction === null) {\n\t\te.effect_orphan(rune);\n\t}\n\n\tif (active_reaction !== null && (active_reaction.f & UNOWNED) !== 0) {\n\t\te.effect_in_unowned_derived();\n\t}\n\n\tif (is_destroying_effect) {\n\t\te.effect_in_teardown(rune);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {Effect} parent_effect\n */\nfunction push_effect(effect, parent_effect) {\n\tvar parent_last = parent_effect.last;\n\tif (parent_last === null) {\n\t\tparent_effect.last = parent_effect.first = effect;\n\t} else {\n\t\tparent_last.next = effect;\n\t\teffect.prev = parent_last;\n\t\tparent_effect.last = effect;\n\t}\n}\n\n/**\n * @param {number} type\n * @param {null | (() => void | (() => void))} fn\n * @param {boolean} sync\n * @param {boolean} push\n * @returns {Effect}\n */\nfunction create_effect(type, fn, sync, push = true) {\n\tvar is_root = (type & ROOT_EFFECT) !== 0;\n\tvar parent_effect = active_effect;\n\n\tif (DEV) {\n\t\t// Ensure the parent is never an inspect effect\n\t\twhile (parent_effect !== null && (parent_effect.f & INSPECT_EFFECT) !== 0) {\n\t\t\tparent_effect = parent_effect.parent;\n\t\t}\n\t}\n\n\t/** @type {Effect} */\n\tvar effect = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\tderiveds: null,\n\t\tnodes_start: null,\n\t\tnodes_end: null,\n\t\tf: type | DIRTY,\n\t\tfirst: null,\n\t\tfn,\n\t\tlast: null,\n\t\tnext: null,\n\t\tparent: is_root ? null : parent_effect,\n\t\tprev: null,\n\t\tteardown: null,\n\t\ttransitions: null,\n\t\tversion: 0\n\t};\n\n\tif (DEV) {\n\t\teffect.component_function = dev_current_component_function;\n\t}\n\n\tif (sync) {\n\t\tvar previously_flushing_effect = is_flushing_effect;\n\n\t\ttry {\n\t\t\tset_is_flushing_effect(true);\n\t\t\tupdate_effect(effect);\n\t\t\teffect.f |= EFFECT_RAN;\n\t\t} catch (e) {\n\t\t\tdestroy_effect(effect);\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tset_is_flushing_effect(previously_flushing_effect);\n\t\t}\n\t} else if (fn !== null) {\n\t\tschedule_effect(effect);\n\t}\n\n\t// if an effect has no dependencies, no DOM and no teardown function,\n\t// don't bother adding it to the effect tree\n\tvar inert =\n\t\tsync &&\n\t\teffect.deps === null &&\n\t\teffect.first === null &&\n\t\teffect.nodes_start === null &&\n\t\teffect.teardown === null &&\n\t\t(effect.f & EFFECT_HAS_DERIVED) === 0;\n\n\tif (!inert && !is_root && push) {\n\t\tif (parent_effect !== null) {\n\t\t\tpush_effect(effect, parent_effect);\n\t\t}\n\n\t\t// if we're in a derived, add the effect there too\n\t\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\t\tvar derived = /** @type {Derived} */ (active_reaction);\n\t\t\t(derived.children ??= []).push(effect);\n\t\t}\n\t}\n\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect.tracking()`\n * @returns {boolean}\n */\nexport function effect_tracking() {\n\tif (active_reaction === null) {\n\t\treturn false;\n\t}\n\n\t// If it's skipped, that's because we're inside an unowned\n\t// that is not being tracked by another reaction\n\treturn !skip_reaction;\n}\n\n/**\n * @param {() => void} fn\n */\nexport function teardown(fn) {\n\tconst effect = create_effect(RENDER_EFFECT, null, false);\n\tset_signal_status(effect, CLEAN);\n\teffect.teardown = fn;\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect(...)`\n * @param {() => void | (() => void)} fn\n */\nexport function user_effect(fn) {\n\tvalidate_effect('$effect');\n\n\t// Non-nested `$effect(...)` in a component should be deferred\n\t// until the component is mounted\n\tvar defer =\n\t\tactive_effect !== null &&\n\t\t(active_effect.f & BRANCH_EFFECT) !== 0 &&\n\t\tcomponent_context !== null &&\n\t\t!component_context.m;\n\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect'\n\t\t});\n\t}\n\n\tif (defer) {\n\t\tvar context = /** @type {ComponentContext} */ (component_context);\n\t\t(context.e ??= []).push({\n\t\t\tfn,\n\t\t\teffect: active_effect,\n\t\t\treaction: active_reaction\n\t\t});\n\t} else {\n\t\tvar signal = effect(fn);\n\t\treturn signal;\n\t}\n}\n\n/**\n * Internal representation of `$effect.pre(...)`\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function user_pre_effect(fn) {\n\tvalidate_effect('$effect.pre');\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect.pre'\n\t\t});\n\t}\n\treturn render_effect(fn);\n}\n\n/** @param {() => void | (() => void)} fn */\nexport function inspect_effect(fn) {\n\treturn create_effect(INSPECT_EFFECT, fn, true);\n}\n\n/**\n * Internal representation of `$effect.root(...)`\n * @param {() => void | (() => void)} fn\n * @returns {() => void}\n */\nexport function effect_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\treturn () => {\n\t\tdestroy_effect(effect);\n\t};\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function effect(fn) {\n\treturn create_effect(EFFECT, fn, false);\n}\n\n/**\n * Internal representation of `$: ..`\n * @param {() => any} deps\n * @param {() => void | (() => void)} fn\n */\nexport function legacy_pre_effect(deps, fn) {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\t/** @type {{ effect: null | Effect, ran: boolean }} */\n\tvar token = { effect: null, ran: false };\n\tcontext.l.r1.push(token);\n\n\ttoken.effect = render_effect(() => {\n\t\tdeps();\n\n\t\t// If this legacy pre effect has already run before the end of the reset, then\n\t\t// bail out to emulate the same behavior.\n\t\tif (token.ran) return;\n\n\t\ttoken.ran = true;\n\t\tset(context.l.r2, true);\n\t\tuntrack(fn);\n\t});\n}\n\nexport function legacy_pre_effect_reset() {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\trender_effect(() => {\n\t\tif (!get(context.l.r2)) return;\n\n\t\t// Run dirty `$:` statements\n\t\tfor (var token of context.l.r1) {\n\t\t\tvar effect = token.effect;\n\n\t\t\t// If the effect is CLEAN, then make it MAYBE_DIRTY. This ensures we traverse through\n\t\t\t// the effects dependencies and correctly ensure each dependency is up-to-date.\n\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t}\n\n\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\tupdate_effect(effect);\n\t\t\t}\n\n\t\t\ttoken.ran = false;\n\t\t}\n\n\t\tcontext.l.r2.v = false; // set directly to avoid rerunning this effect\n\t});\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function render_effect(fn) {\n\treturn create_effect(RENDER_EFFECT, fn, true);\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function template_effect(fn) {\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '{expression}'\n\t\t});\n\t}\n\treturn block(fn);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {number} flags\n */\nexport function block(fn, flags = 0) {\n\treturn create_effect(RENDER_EFFECT | BLOCK_EFFECT | flags, fn, true);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {boolean} [push]\n */\nexport function branch(fn, push = true) {\n\treturn create_effect(RENDER_EFFECT | BRANCH_EFFECT, fn, true, push);\n}\n\n/**\n * @param {Effect} effect\n */\nexport function execute_effect_teardown(effect) {\n\tvar teardown = effect.teardown;\n\tif (teardown !== null) {\n\t\tconst previously_destroying_effect = is_destroying_effect;\n\t\tconst previous_reaction = active_reaction;\n\t\tset_is_destroying_effect(true);\n\t\tset_active_reaction(null);\n\t\ttry {\n\t\t\tteardown.call(null);\n\t\t} finally {\n\t\t\tset_is_destroying_effect(previously_destroying_effect);\n\t\t\tset_active_reaction(previous_reaction);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function destroy_effect_deriveds(signal) {\n\tvar deriveds = signal.deriveds;\n\n\tif (deriveds !== null) {\n\t\tsignal.deriveds = null;\n\n\t\tfor (var i = 0; i < deriveds.length; i += 1) {\n\t\t\tdestroy_derived(deriveds[i]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @param {boolean} remove_dom\n * @returns {void}\n */\nexport function destroy_effect_children(signal, remove_dom = false) {\n\tvar effect = signal.first;\n\tsignal.first = signal.last = null;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tdestroy_effect(effect, remove_dom);\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function destroy_block_effect_children(signal) {\n\tvar effect = signal.first;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tif ((effect.f & BRANCH_EFFECT) === 0) {\n\t\t\tdestroy_effect(effect);\n\t\t}\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} [remove_dom]\n * @returns {void}\n */\nexport function destroy_effect(effect, remove_dom = true) {\n\tvar removed = false;\n\n\tif ((remove_dom || (effect.f & HEAD_EFFECT) !== 0) && effect.nodes_start !== null) {\n\t\t/** @type {TemplateNode | null} */\n\t\tvar node = effect.nodes_start;\n\t\tvar end = effect.nodes_end;\n\n\t\twhile (node !== null) {\n\t\t\t/** @type {TemplateNode | null} */\n\t\t\tvar next = node === end ? null : /** @type {TemplateNode} */ (get_next_sibling(node));\n\n\t\t\tnode.remove();\n\t\t\tnode = next;\n\t\t}\n\n\t\tremoved = true;\n\t}\n\n\tdestroy_effect_children(effect, remove_dom && !removed);\n\tdestroy_effect_deriveds(effect);\n\tremove_reactions(effect, 0);\n\tset_signal_status(effect, DESTROYED);\n\n\tvar transitions = effect.transitions;\n\n\tif (transitions !== null) {\n\t\tfor (const transition of transitions) {\n\t\t\ttransition.stop();\n\t\t}\n\t}\n\n\texecute_effect_teardown(effect);\n\n\tvar parent = effect.parent;\n\n\t// If the parent doesn't have any children, then skip this work altogether\n\tif (parent !== null && parent.first !== null) {\n\t\tunlink_effect(effect);\n\t}\n\n\tif (DEV) {\n\t\teffect.component_function = null;\n\t}\n\n\t// `first` and `child` are nulled out in destroy_effect_children\n\teffect.next =\n\t\teffect.prev =\n\t\teffect.teardown =\n\t\teffect.ctx =\n\t\teffect.deps =\n\t\teffect.parent =\n\t\teffect.fn =\n\t\teffect.nodes_start =\n\t\teffect.nodes_end =\n\t\t\tnull;\n}\n\n/**\n * Detach an effect from the effect tree, freeing up memory and\n * reducing the amount of work that happens on subsequent traversals\n * @param {Effect} effect\n */\nexport function unlink_effect(effect) {\n\tvar parent = effect.parent;\n\tvar prev = effect.prev;\n\tvar next = effect.next;\n\n\tif (prev !== null) prev.next = next;\n\tif (next !== null) next.prev = prev;\n\n\tif (parent !== null) {\n\t\tif (parent.first === effect) parent.first = next;\n\t\tif (parent.last === effect) parent.last = prev;\n\t}\n}\n\n/**\n * When a block effect is removed, we don't immediately destroy it or yank it\n * out of the DOM, because it might have transitions. Instead, we 'pause' it.\n * It stays around (in memory, and in the DOM) until outro transitions have\n * completed, and if the state change is reversed then we _resume_ it.\n * A paused effect does not update, and the DOM subtree becomes inert.\n * @param {Effect} effect\n * @param {() => void} [callback]\n */\nexport function pause_effect(effect, callback) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\n\tpause_children(effect, transitions, true);\n\n\trun_out_transitions(transitions, () => {\n\t\tdestroy_effect(effect);\n\t\tif (callback) callback();\n\t});\n}\n\n/**\n * @param {TransitionManager[]} transitions\n * @param {() => void} fn\n */\nexport function run_out_transitions(transitions, fn) {\n\tvar remaining = transitions.length;\n\tif (remaining > 0) {\n\t\tvar check = () => --remaining || fn();\n\t\tfor (var transition of transitions) {\n\t\t\ttransition.out(check);\n\t\t}\n\t} else {\n\t\tfn();\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {TransitionManager[]} transitions\n * @param {boolean} local\n */\nexport function pause_children(effect, transitions, local) {\n\tif ((effect.f & INERT) !== 0) return;\n\teffect.f ^= INERT;\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransitions.push(transition);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call pause_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tpause_children(child, transitions, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n}\n\n/**\n * The opposite of `pause_effect`. We call this if (for example)\n * `x` becomes falsy then truthy: `{#if x}...{/if}`\n * @param {Effect} effect\n */\nexport function resume_effect(effect) {\n\tresume_children(effect, true);\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} local\n */\nfunction resume_children(effect, local) {\n\tif ((effect.f & INERT) === 0) return;\n\n\t// If a dependency of this effect changed while it was paused,\n\t// apply the change now\n\tif (check_dirtiness(effect)) {\n\t\tupdate_effect(effect);\n\t}\n\n\t// Ensure we toggle the flag after possibly updating the effect so that\n\t// each block logic can correctly operate on inert items\n\teffect.f ^= INERT;\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call resume_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tresume_children(child, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransition.in();\n\t\t\t}\n\t\t}\n\t}\n}\n","import { run_all } from '../../shared/utils.js';\n\n// Fallback for when requestIdleCallback is not available\nconst request_idle_callback =\n\ttypeof requestIdleCallback === 'undefined'\n\t\t? (/** @type {() => void} */ cb) => setTimeout(cb, 1)\n\t\t: requestIdleCallback;\n\nlet is_micro_task_queued = false;\nlet is_idle_task_queued = false;\n\n/** @type {Array<() => void>} */\nlet current_queued_micro_tasks = [];\n/** @type {Array<() => void>} */\nlet current_queued_idle_tasks = [];\n\nfunction process_micro_tasks() {\n\tis_micro_task_queued = false;\n\tconst tasks = current_queued_micro_tasks.slice();\n\tcurrent_queued_micro_tasks = [];\n\trun_all(tasks);\n}\n\nfunction process_idle_tasks() {\n\tis_idle_task_queued = false;\n\tconst tasks = current_queued_idle_tasks.slice();\n\tcurrent_queued_idle_tasks = [];\n\trun_all(tasks);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_micro_task(fn) {\n\tif (!is_micro_task_queued) {\n\t\tis_micro_task_queued = true;\n\t\tqueueMicrotask(process_micro_tasks);\n\t}\n\tcurrent_queued_micro_tasks.push(fn);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_idle_task(fn) {\n\tif (!is_idle_task_queued) {\n\t\tis_idle_task_queued = true;\n\t\trequest_idle_callback(process_idle_tasks);\n\t}\n\tcurrent_queued_idle_tasks.push(fn);\n}\n\n/**\n * Synchronously run any queued tasks.\n */\nexport function flush_tasks() {\n\tif (is_micro_task_queued) {\n\t\tprocess_micro_tasks();\n\t}\n\tif (is_idle_task_queued) {\n\t\tprocess_idle_tasks();\n\t}\n}\n","/** @import { ComponentContext, Derived, Effect, Reaction, Signal, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport { define_property, get_descriptors, get_prototype_of } from '../shared/utils.js';\nimport {\n\tdestroy_block_effect_children,\n\tdestroy_effect_children,\n\tdestroy_effect_deriveds,\n\teffect,\n\texecute_effect_teardown,\n\tunlink_effect\n} from './reactivity/effects.js';\nimport {\n\tEFFECT,\n\tRENDER_EFFECT,\n\tDIRTY,\n\tMAYBE_DIRTY,\n\tCLEAN,\n\tDERIVED,\n\tUNOWNED,\n\tDESTROYED,\n\tINERT,\n\tBRANCH_EFFECT,\n\tSTATE_SYMBOL,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tLEGACY_DERIVED_PROP,\n\tDISCONNECTED\n} from './constants.js';\nimport { flush_tasks } from './dom/task.js';\nimport { add_owner } from './dev/ownership.js';\nimport { mutate, set, source } from './reactivity/sources.js';\nimport { destroy_derived, execute_derived, update_derived } from './reactivity/deriveds.js';\nimport * as e from './errors.js';\nimport { lifecycle_outside_component } from '../shared/errors.js';\nimport { FILENAME } from '../../constants.js';\n\nconst FLUSH_MICROTASK = 0;\nconst FLUSH_SYNC = 1;\n\n// Used for DEV time error handling\n/** @param {WeakSet<Error>} value */\nconst handled_errors = new WeakSet();\n// Used for controlling the flush of effects.\nlet scheduler_mode = FLUSH_MICROTASK;\n// Used for handling scheduling\nlet is_micro_task_queued = false;\n\nexport let is_flushing_effect = false;\nexport let is_destroying_effect = false;\n\n/** @param {boolean} value */\nexport function set_is_flushing_effect(value) {\n\tis_flushing_effect = value;\n}\n\n/** @param {boolean} value */\nexport function set_is_destroying_effect(value) {\n\tis_destroying_effect = value;\n}\n\n// Handle effect queues\n\n/** @type {Effect[]} */\nlet queued_root_effects = [];\n\nlet flush_count = 0;\n/** @type {Effect[]} Stack of effects, dev only */\nlet dev_effect_stack = [];\n// Handle signal reactivity tree dependencies and reactions\n\n/** @type {null | Reaction} */\nexport let active_reaction = null;\n\n/** @param {null | Reaction} reaction */\nexport function set_active_reaction(reaction) {\n\tactive_reaction = reaction;\n}\n\n/** @type {null | Effect} */\nexport let active_effect = null;\n\n/** @param {null | Effect} effect */\nexport function set_active_effect(effect) {\n\tactive_effect = effect;\n}\n\n/**\n * When sources are created within a derived, we record them so that we can safely allow\n * local mutations to these sources without the side-effect error being invoked unnecessarily.\n * @type {null | Source[]}\n */\nexport let derived_sources = null;\n\n/**\n * @param {Source[] | null} sources\n */\nexport function set_derived_sources(sources) {\n\tderived_sources = sources;\n}\n\n/**\n * The dependencies of the reaction that is currently being executed. In many cases,\n * the dependencies are unchanged between runs, and so this will be `null` unless\n * and until a new dependency is accessed — we track this via `skipped_deps`\n * @type {null | Value[]}\n */\nexport let new_deps = null;\n\nlet skipped_deps = 0;\n\n/**\n * Tracks writes that the effect it's executed in doesn't listen to yet,\n * so that the dependency can be added to the effect later on if it then reads it\n * @type {null | Source[]}\n */\nexport let untracked_writes = null;\n\n/** @param {null | Source[]} value */\nexport function set_untracked_writes(value) {\n\tuntracked_writes = value;\n}\n\n/** @type {number} Used by sources and deriveds for handling updates to unowned deriveds */\nlet current_version = 0;\n\n// If we are working with a get() chain that has no active container,\n// to prevent memory leaks, we skip adding the reaction.\nexport let skip_reaction = false;\n// Handle collecting all signals which are read during a specific time frame\nexport let is_signals_recorded = false;\nlet captured_signals = new Set();\n\n// Handling runtime component context\n/** @type {ComponentContext | null} */\nexport let component_context = null;\n\n/** @param {ComponentContext | null} context */\nexport function set_component_context(context) {\n\tcomponent_context = context;\n}\n\n/**\n * The current component function. Different from current component context:\n * ```html\n * <!-- App.svelte -->\n * <Foo>\n *   <Bar /> <!-- context == Foo.svelte, function == App.svelte -->\n * </Foo>\n * ```\n * @type {ComponentContext['function']}\n */\nexport let dev_current_component_function = null;\n\n/** @param {ComponentContext['function']} fn */\nexport function set_dev_current_component_function(fn) {\n\tdev_current_component_function = fn;\n}\n\nexport function increment_version() {\n\treturn ++current_version;\n}\n\n/** @returns {boolean} */\nexport function is_runes() {\n\treturn component_context !== null && component_context.l === null;\n}\n\n/**\n * Determines whether a derived or effect is dirty.\n * If it is MAYBE_DIRTY, will set the status to CLEAN\n * @param {Reaction} reaction\n * @returns {boolean}\n */\nexport function check_dirtiness(reaction) {\n\tvar flags = reaction.f;\n\n\tif ((flags & DIRTY) !== 0) {\n\t\treturn true;\n\t}\n\n\tif ((flags & MAYBE_DIRTY) !== 0) {\n\t\tvar dependencies = reaction.deps;\n\t\tvar is_unowned = (flags & UNOWNED) !== 0;\n\n\t\tif (dependencies !== null) {\n\t\t\tvar i;\n\n\t\t\tif ((flags & DISCONNECTED) !== 0) {\n\t\t\t\tfor (i = 0; i < dependencies.length; i++) {\n\t\t\t\t\t(dependencies[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\n\t\t\t\treaction.f ^= DISCONNECTED;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < dependencies.length; i++) {\n\t\t\t\tvar dependency = dependencies[i];\n\n\t\t\t\tif (check_dirtiness(/** @type {Derived} */ (dependency))) {\n\t\t\t\t\tupdate_derived(/** @type {Derived} */ (dependency));\n\t\t\t\t}\n\n\t\t\t\t// If we are working with an unowned signal as part of an effect (due to !skip_reaction)\n\t\t\t\t// and the version hasn't changed, we still need to check that this reaction\n\t\t\t\t// is linked to the dependency source – otherwise future updates will not be caught.\n\t\t\t\tif (\n\t\t\t\t\tis_unowned &&\n\t\t\t\t\tactive_effect !== null &&\n\t\t\t\t\t!skip_reaction &&\n\t\t\t\t\t!dependency?.reactions?.includes(reaction)\n\t\t\t\t) {\n\t\t\t\t\t(dependency.reactions ??= []).push(reaction);\n\t\t\t\t}\n\n\t\t\t\tif (dependency.version > reaction.version) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Unowned signals should never be marked as clean.\n\t\tif (!is_unowned) {\n\t\t\tset_signal_status(reaction, CLEAN);\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {Error} error\n * @param {Effect} effect\n * @param {ComponentContext | null} component_context\n */\nfunction handle_error(error, effect, component_context) {\n\t// Given we don't yet have error boundaries, we will just always throw.\n\tif (!DEV || handled_errors.has(error) || component_context === null) {\n\t\tthrow error;\n\t}\n\n\tconst component_stack = [];\n\n\tconst effect_name = effect.fn?.name;\n\n\tif (effect_name) {\n\t\tcomponent_stack.push(effect_name);\n\t}\n\n\t/** @type {ComponentContext | null} */\n\tlet current_context = component_context;\n\n\twhile (current_context !== null) {\n\t\tif (DEV) {\n\t\t\t/** @type {string} */\n\t\t\tvar filename = current_context.function?.[FILENAME];\n\n\t\t\tif (filename) {\n\t\t\t\tconst file = filename.split('/').pop();\n\t\t\t\tcomponent_stack.push(file);\n\t\t\t}\n\t\t}\n\n\t\tcurrent_context = current_context.p;\n\t}\n\n\tconst indent = /Firefox/.test(navigator.userAgent) ? '  ' : '\\t';\n\tdefine_property(error, 'message', {\n\t\tvalue: error.message + `\\n${component_stack.map((name) => `\\n${indent}in ${name}`).join('')}\\n`\n\t});\n\n\tconst stack = error.stack;\n\n\t// Filter out internal files from callstack\n\tif (stack) {\n\t\tconst lines = stack.split('\\n');\n\t\tconst new_lines = [];\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tconst line = lines[i];\n\t\t\tif (line.includes('svelte/src/internal')) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tnew_lines.push(line);\n\t\t}\n\t\tdefine_property(error, 'stack', {\n\t\t\tvalue: error.stack + new_lines.join('\\n')\n\t\t});\n\t}\n\n\thandled_errors.add(error);\n\tthrow error;\n}\n\n/**\n * @template V\n * @param {Reaction} reaction\n * @returns {V}\n */\nexport function update_reaction(reaction) {\n\tvar previous_deps = new_deps;\n\tvar previous_skipped_deps = skipped_deps;\n\tvar previous_untracked_writes = untracked_writes;\n\tvar previous_reaction = active_reaction;\n\tvar previous_skip_reaction = skip_reaction;\n\tvar prev_derived_sources = derived_sources;\n\tvar previous_component_context = component_context;\n\tvar flags = reaction.f;\n\n\tnew_deps = /** @type {null | Value[]} */ (null);\n\tskipped_deps = 0;\n\tuntracked_writes = null;\n\tactive_reaction = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) === 0 ? reaction : null;\n\tskip_reaction = !is_flushing_effect && (flags & UNOWNED) !== 0;\n\tderived_sources = null;\n\tcomponent_context = reaction.ctx;\n\n\ttry {\n\t\tvar result = /** @type {Function} */ (0, reaction.fn)();\n\t\tvar deps = reaction.deps;\n\n\t\tif (new_deps !== null) {\n\t\t\tvar i;\n\n\t\t\tremove_reactions(reaction, skipped_deps);\n\n\t\t\tif (deps !== null && skipped_deps > 0) {\n\t\t\t\tdeps.length = skipped_deps + new_deps.length;\n\t\t\t\tfor (i = 0; i < new_deps.length; i++) {\n\t\t\t\t\tdeps[skipped_deps + i] = new_deps[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treaction.deps = deps = new_deps;\n\t\t\t}\n\n\t\t\tif (!skip_reaction) {\n\t\t\t\tfor (i = skipped_deps; i < deps.length; i++) {\n\t\t\t\t\t(deps[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (deps !== null && skipped_deps < deps.length) {\n\t\t\tremove_reactions(reaction, skipped_deps);\n\t\t\tdeps.length = skipped_deps;\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tnew_deps = previous_deps;\n\t\tskipped_deps = previous_skipped_deps;\n\t\tuntracked_writes = previous_untracked_writes;\n\t\tactive_reaction = previous_reaction;\n\t\tskip_reaction = previous_skip_reaction;\n\t\tderived_sources = prev_derived_sources;\n\t\tcomponent_context = previous_component_context;\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} signal\n * @param {Value<V>} dependency\n * @returns {void}\n */\nfunction remove_reaction(signal, dependency) {\n\tlet reactions = dependency.reactions;\n\tif (reactions !== null) {\n\t\tvar index = reactions.indexOf(signal);\n\t\tif (index !== -1) {\n\t\t\tvar new_length = reactions.length - 1;\n\t\t\tif (new_length === 0) {\n\t\t\t\treactions = dependency.reactions = null;\n\t\t\t} else {\n\t\t\t\t// Swap with last element and then remove.\n\t\t\t\treactions[index] = reactions[new_length];\n\t\t\t\treactions.pop();\n\t\t\t}\n\t\t}\n\t}\n\t// If the derived has no reactions, then we can disconnect it from the graph,\n\t// allowing it to either reconnect in the future, or be GC'd by the VM.\n\tif (\n\t\treactions === null &&\n\t\t(dependency.f & DERIVED) !== 0 &&\n\t\t// Destroying a child effect while updating a parent effect can cause a dependency to appear\n\t\t// to be unused, when in fact it is used by the currently-updating parent. Checking `new_deps`\n\t\t// allows us to skip the expensive work of disconnecting and immediately reconnecting it\n\t\t(new_deps === null || !new_deps.includes(dependency))\n\t) {\n\t\tset_signal_status(dependency, MAYBE_DIRTY);\n\t\t// If we are working with a derived that is owned by an effect, then mark it as being\n\t\t// disconnected.\n\t\tif ((dependency.f & (UNOWNED | DISCONNECTED)) === 0) {\n\t\t\tdependency.f ^= DISCONNECTED;\n\t\t}\n\t\tremove_reactions(/** @type {Derived} **/ (dependency), 0);\n\t}\n}\n\n/**\n * @param {Reaction} signal\n * @param {number} start_index\n * @returns {void}\n */\nexport function remove_reactions(signal, start_index) {\n\tvar dependencies = signal.deps;\n\tif (dependencies === null) return;\n\n\tfor (var i = start_index; i < dependencies.length; i++) {\n\t\tremove_reaction(signal, dependencies[i]);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @returns {void}\n */\nexport function update_effect(effect) {\n\tvar flags = effect.f;\n\n\tif ((flags & DESTROYED) !== 0) {\n\t\treturn;\n\t}\n\n\tset_signal_status(effect, CLEAN);\n\n\tvar previous_effect = active_effect;\n\tvar previous_component_context = component_context;\n\n\tactive_effect = effect;\n\n\tif (DEV) {\n\t\tvar previous_component_fn = dev_current_component_function;\n\t\tdev_current_component_function = effect.component_function;\n\t}\n\n\ttry {\n\t\tif ((flags & BLOCK_EFFECT) !== 0) {\n\t\t\tdestroy_block_effect_children(effect);\n\t\t} else {\n\t\t\tdestroy_effect_children(effect);\n\t\t}\n\t\tdestroy_effect_deriveds(effect);\n\n\t\texecute_effect_teardown(effect);\n\t\tvar teardown = update_reaction(effect);\n\t\teffect.teardown = typeof teardown === 'function' ? teardown : null;\n\t\teffect.version = current_version;\n\n\t\tif (DEV) {\n\t\t\tdev_effect_stack.push(effect);\n\t\t}\n\t} catch (error) {\n\t\thandle_error(/** @type {Error} */ (error), effect, previous_component_context);\n\t} finally {\n\t\tactive_effect = previous_effect;\n\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = previous_component_fn;\n\t\t}\n\t}\n}\n\nfunction infinite_loop_guard() {\n\tif (flush_count > 1000) {\n\t\tflush_count = 0;\n\t\tif (DEV) {\n\t\t\ttry {\n\t\t\t\te.effect_update_depth_exceeded();\n\t\t\t} catch (error) {\n\t\t\t\t// stack is garbage, ignore. Instead add a console.error message.\n\t\t\t\tdefine_property(error, 'stack', {\n\t\t\t\t\tvalue: ''\n\t\t\t\t});\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error(\n\t\t\t\t\t'Last ten effects were: ',\n\t\t\t\t\tdev_effect_stack.slice(-10).map((d) => d.fn)\n\t\t\t\t);\n\t\t\t\tdev_effect_stack = [];\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t} else {\n\t\t\te.effect_update_depth_exceeded();\n\t\t}\n\t}\n\tflush_count++;\n}\n\n/**\n * @param {Array<Effect>} root_effects\n * @returns {void}\n */\nfunction flush_queued_root_effects(root_effects) {\n\tvar length = root_effects.length;\n\tif (length === 0) {\n\t\treturn;\n\t}\n\tinfinite_loop_guard();\n\n\tvar previously_flushing_effect = is_flushing_effect;\n\tis_flushing_effect = true;\n\n\ttry {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar effect = root_effects[i];\n\n\t\t\tif ((effect.f & CLEAN) === 0) {\n\t\t\t\teffect.f ^= CLEAN;\n\t\t\t}\n\n\t\t\t/** @type {Effect[]} */\n\t\t\tvar collected_effects = [];\n\n\t\t\tprocess_effects(effect, collected_effects);\n\t\t\tflush_queued_effects(collected_effects);\n\t\t}\n\t} finally {\n\t\tis_flushing_effect = previously_flushing_effect;\n\t}\n}\n\n/**\n * @param {Array<Effect>} effects\n * @returns {void}\n */\nfunction flush_queued_effects(effects) {\n\tvar length = effects.length;\n\tif (length === 0) return;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar effect = effects[i];\n\n\t\tif ((effect.f & (DESTROYED | INERT)) === 0 && check_dirtiness(effect)) {\n\t\t\tupdate_effect(effect);\n\n\t\t\t// Effects with no dependencies or teardown do not get added to the effect tree.\n\t\t\t// Deferred effects (e.g. `$effect(...)`) _are_ added to the tree because we\n\t\t\t// don't know if we need to keep them until they are executed. Doing the check\n\t\t\t// here (rather than in `update_effect`) allows us to skip the work for\n\t\t\t// immediate effects.\n\t\t\tif (effect.deps === null && effect.first === null && effect.nodes_start === null) {\n\t\t\t\tif (effect.teardown === null) {\n\t\t\t\t\t// remove this effect from the graph\n\t\t\t\t\tunlink_effect(effect);\n\t\t\t\t} else {\n\t\t\t\t\t// keep the effect in the graph, but free up some memory\n\t\t\t\t\teffect.fn = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction process_deferred() {\n\tis_micro_task_queued = false;\n\tif (flush_count > 1001) {\n\t\treturn;\n\t}\n\tconst previous_queued_root_effects = queued_root_effects;\n\tqueued_root_effects = [];\n\tflush_queued_root_effects(previous_queued_root_effects);\n\tif (!is_micro_task_queued) {\n\t\tflush_count = 0;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function schedule_effect(signal) {\n\tif (scheduler_mode === FLUSH_MICROTASK) {\n\t\tif (!is_micro_task_queued) {\n\t\t\tis_micro_task_queued = true;\n\t\t\tqueueMicrotask(process_deferred);\n\t\t}\n\t}\n\n\tvar effect = signal;\n\n\twhile (effect.parent !== null) {\n\t\teffect = effect.parent;\n\t\tvar flags = effect.f;\n\n\t\tif ((flags & (ROOT_EFFECT | BRANCH_EFFECT)) !== 0) {\n\t\t\tif ((flags & CLEAN) === 0) return;\n\t\t\teffect.f ^= CLEAN;\n\t\t}\n\t}\n\n\tqueued_root_effects.push(effect);\n}\n\n/**\n *\n * This function both runs render effects and collects user effects in topological order\n * from the starting effect passed in. Effects will be collected when they match the filtered\n * bitwise flag passed in only. The collected effects array will be populated with all the user\n * effects to be flushed.\n *\n * @param {Effect} effect\n * @param {Effect[]} collected_effects\n * @returns {void}\n */\nfunction process_effects(effect, collected_effects) {\n\tvar current_effect = effect.first;\n\tvar effects = [];\n\n\tmain_loop: while (current_effect !== null) {\n\t\tvar flags = current_effect.f;\n\t\tvar is_branch = (flags & BRANCH_EFFECT) !== 0;\n\t\tvar is_skippable_branch = is_branch && (flags & CLEAN) !== 0;\n\n\t\tif (!is_skippable_branch && (flags & INERT) === 0) {\n\t\t\tif ((flags & RENDER_EFFECT) !== 0) {\n\t\t\t\tif (is_branch) {\n\t\t\t\t\tcurrent_effect.f ^= CLEAN;\n\t\t\t\t} else if (check_dirtiness(current_effect)) {\n\t\t\t\t\tupdate_effect(current_effect);\n\t\t\t\t}\n\n\t\t\t\tvar child = current_effect.first;\n\n\t\t\t\tif (child !== null) {\n\t\t\t\t\tcurrent_effect = child;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if ((flags & EFFECT) !== 0) {\n\t\t\t\teffects.push(current_effect);\n\t\t\t}\n\t\t}\n\n\t\tvar sibling = current_effect.next;\n\n\t\tif (sibling === null) {\n\t\t\tlet parent = current_effect.parent;\n\n\t\t\twhile (parent !== null) {\n\t\t\t\tif (effect === parent) {\n\t\t\t\t\tbreak main_loop;\n\t\t\t\t}\n\t\t\t\tvar parent_sibling = parent.next;\n\t\t\t\tif (parent_sibling !== null) {\n\t\t\t\t\tcurrent_effect = parent_sibling;\n\t\t\t\t\tcontinue main_loop;\n\t\t\t\t}\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\t\t}\n\n\t\tcurrent_effect = sibling;\n\t}\n\n\t// We might be dealing with many effects here, far more than can be spread into\n\t// an array push call (callstack overflow). So let's deal with each effect in a loop.\n\tfor (var i = 0; i < effects.length; i++) {\n\t\tchild = effects[i];\n\t\tcollected_effects.push(child);\n\t\tprocess_effects(child, collected_effects);\n\t}\n}\n\n/**\n * Internal version of `flushSync` with the option to not flush previous effects.\n * Returns the result of the passed function, if given.\n * @param {() => any} [fn]\n * @returns {any}\n */\nexport function flush_sync(fn) {\n\tvar previous_scheduler_mode = scheduler_mode;\n\tvar previous_queued_root_effects = queued_root_effects;\n\n\ttry {\n\t\tinfinite_loop_guard();\n\n\t\t/** @type {Effect[]} */\n\t\tconst root_effects = [];\n\n\t\tscheduler_mode = FLUSH_SYNC;\n\t\tqueued_root_effects = root_effects;\n\t\tis_micro_task_queued = false;\n\n\t\tflush_queued_root_effects(previous_queued_root_effects);\n\n\t\tvar result = fn?.();\n\n\t\tflush_tasks();\n\t\tif (queued_root_effects.length > 0 || root_effects.length > 0) {\n\t\t\tflush_sync();\n\t\t}\n\n\t\tflush_count = 0;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tscheduler_mode = previous_scheduler_mode;\n\t\tqueued_root_effects = previous_queued_root_effects;\n\t}\n}\n\n/**\n * Returns a promise that resolves once any pending state changes have been applied.\n * @returns {Promise<void>}\n */\nexport async function tick() {\n\tawait Promise.resolve();\n\t// By calling flush_sync we guarantee that any pending state changes are applied after one tick.\n\t// TODO look into whether we can make flushing subsequent updates synchronously in the future.\n\tflush_sync();\n}\n\n/**\n * @template V\n * @param {Value<V>} signal\n * @returns {V}\n */\nexport function get(signal) {\n\tvar flags = signal.f;\n\tvar is_derived = (flags & DERIVED) !== 0;\n\n\t// If the derived is destroyed, just execute it again without retaining\n\t// its memoisation properties as the derived is stale\n\tif (is_derived && (flags & DESTROYED) !== 0) {\n\t\tvar value = execute_derived(/** @type {Derived} */ (signal));\n\t\t// Ensure the derived remains destroyed\n\t\tdestroy_derived(/** @type {Derived} */ (signal));\n\t\treturn value;\n\t}\n\n\tif (is_signals_recorded) {\n\t\tcaptured_signals.add(signal);\n\t}\n\n\t// Register the dependency on the current reaction signal.\n\tif (active_reaction !== null) {\n\t\tif (derived_sources !== null && derived_sources.includes(signal)) {\n\t\t\te.state_unsafe_local_read();\n\t\t}\n\t\tvar deps = active_reaction.deps;\n\n\t\t// If the signal is accessing the same dependencies in the same\n\t\t// order as it did last time, increment `skipped_deps`\n\t\t// rather than updating `new_deps`, which creates GC cost\n\t\tif (new_deps === null && deps !== null && deps[skipped_deps] === signal) {\n\t\t\tskipped_deps++;\n\t\t} else if (new_deps === null) {\n\t\t\tnew_deps = [signal];\n\t\t} else {\n\t\t\tnew_deps.push(signal);\n\t\t}\n\n\t\tif (\n\t\t\tuntracked_writes !== null &&\n\t\t\tactive_effect !== null &&\n\t\t\t(active_effect.f & CLEAN) !== 0 &&\n\t\t\t(active_effect.f & BRANCH_EFFECT) === 0 &&\n\t\t\tuntracked_writes.includes(signal)\n\t\t) {\n\t\t\tset_signal_status(active_effect, DIRTY);\n\t\t\tschedule_effect(active_effect);\n\t\t}\n\t} else if (is_derived && /** @type {Derived} */ (signal).deps === null) {\n\t\tvar derived = /** @type {Derived} */ (signal);\n\t\tvar parent = derived.parent;\n\n\t\tif (parent !== null && !parent.deriveds?.includes(derived)) {\n\t\t\t(parent.deriveds ??= []).push(derived);\n\t\t}\n\t}\n\n\tif (is_derived) {\n\t\tderived = /** @type {Derived} */ (signal);\n\n\t\tif (check_dirtiness(derived)) {\n\t\t\tupdate_derived(derived);\n\t\t}\n\t}\n\n\treturn signal.v;\n}\n\n/**\n * Like `get`, but checks for `undefined`. Used for `var` declarations because they can be accessed before being declared\n * @template V\n * @param {Value<V> | undefined} signal\n * @returns {V | undefined}\n */\nexport function safe_get(signal) {\n\treturn signal && get(signal);\n}\n\n/**\n * Invokes a function and captures all signals that are read during the invocation,\n * then invalidates them.\n * @param {() => any} fn\n */\nexport function invalidate_inner_signals(fn) {\n\tvar previous_is_signals_recorded = is_signals_recorded;\n\tvar previous_captured_signals = captured_signals;\n\tis_signals_recorded = true;\n\tcaptured_signals = new Set();\n\tvar captured = captured_signals;\n\tvar signal;\n\ttry {\n\t\tuntrack(fn);\n\t} finally {\n\t\tis_signals_recorded = previous_is_signals_recorded;\n\t\tif (is_signals_recorded) {\n\t\t\tfor (signal of captured_signals) {\n\t\t\t\tprevious_captured_signals.add(signal);\n\t\t\t}\n\t\t}\n\t\tcaptured_signals = previous_captured_signals;\n\t}\n\tfor (signal of captured) {\n\t\t// Go one level up because derived signals created as part of props in legacy mode\n\t\tif ((signal.f & LEGACY_DERIVED_PROP) !== 0) {\n\t\t\tfor (const dep of /** @type {Derived} */ (signal).deps || []) {\n\t\t\t\tif ((dep.f & DERIVED) === 0) {\n\t\t\t\t\tmutate(dep, null /* doesnt matter */);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tmutate(signal, null /* doesnt matter */);\n\t\t}\n\t}\n}\n\n/**\n * When used inside a [`$derived`](https://svelte.dev/docs/svelte/$derived) or [`$effect`](https://svelte.dev/docs/svelte/$effect),\n * any state read inside `fn` will not be treated as a dependency.\n *\n * ```ts\n * $effect(() => {\n *   // this will run when `data` changes, but not when `time` changes\n *   save(data, {\n *     timestamp: untrack(() => time)\n *   });\n * });\n * ```\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nexport function untrack(fn) {\n\tconst previous_reaction = active_reaction;\n\ttry {\n\t\tactive_reaction = null;\n\t\treturn fn();\n\t} finally {\n\t\tactive_reaction = previous_reaction;\n\t}\n}\n\nconst STATUS_MASK = ~(DIRTY | MAYBE_DIRTY | CLEAN);\n\n/**\n * @param {Signal} signal\n * @param {number} status\n * @returns {void}\n */\nexport function set_signal_status(signal, status) {\n\tsignal.f = (signal.f & STATUS_MASK) | status;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\tconst context_map = get_or_init_context_map('getContext');\n\tconst result = /** @type {T} */ (context_map.get(key));\n\n\tif (DEV) {\n\t\tconst fn = /** @type {ComponentContext} */ (component_context).function;\n\t\tif (fn) {\n\t\t\tadd_owner(result, fn, true);\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tconst context_map = get_or_init_context_map('setContext');\n\tcontext_map.set(key, context);\n\treturn context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\tconst context_map = get_or_init_context_map('hasContext');\n\treturn context_map.has(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\tconst context_map = get_or_init_context_map('getAllContexts');\n\n\tif (DEV) {\n\t\tconst fn = component_context?.function;\n\t\tif (fn) {\n\t\t\tfor (const value of context_map.values()) {\n\t\t\t\tadd_owner(value, fn, true);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn /** @type {T} */ (context_map);\n}\n\n/**\n * @param {string} name\n * @returns {Map<unknown, unknown>}\n */\nfunction get_or_init_context_map(name) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component(name);\n\t}\n\n\treturn (component_context.c ??= new Map(get_parent_context(component_context) || undefined));\n}\n\n/**\n * @param {ComponentContext} component_context\n * @returns {Map<unknown, unknown> | null}\n */\nfunction get_parent_context(component_context) {\n\tlet parent = component_context.p;\n\twhile (parent !== null) {\n\t\tconst context_map = parent.c;\n\t\tif (context_map !== null) {\n\t\t\treturn context_map;\n\t\t}\n\t\tparent = parent.p;\n\t}\n\treturn null;\n}\n\n/**\n * @param {Value<number>} signal\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update(signal, d = 1) {\n\tvar value = +get(signal);\n\tset(signal, value + d);\n\treturn value;\n}\n\n/**\n * @param {Value<number>} signal\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre(signal, d = 1) {\n\treturn set(signal, +get(signal) + d);\n}\n\n/**\n * @param {Record<string, unknown>} obj\n * @param {string[]} keys\n * @returns {Record<string, unknown>}\n */\nexport function exclude_from_object(obj, keys) {\n\t/** @type {Record<string, unknown>} */\n\tvar result = {};\n\n\tfor (var key in obj) {\n\t\tif (!keys.includes(key)) {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {any} runes\n * @param {Function} [fn]\n * @returns {void}\n */\nexport function push(props, runes = false, fn) {\n\tcomponent_context = {\n\t\tp: component_context,\n\t\tc: null,\n\t\te: null,\n\t\tm: false,\n\t\ts: props,\n\t\tx: null,\n\t\tl: null\n\t};\n\n\tif (!runes) {\n\t\tcomponent_context.l = {\n\t\t\ts: null,\n\t\t\tu: null,\n\t\t\tr1: [],\n\t\t\tr2: source(false)\n\t\t};\n\t}\n\n\tif (DEV) {\n\t\t// component function\n\t\tcomponent_context.function = fn;\n\t\tdev_current_component_function = fn;\n\t}\n}\n\n/**\n * @template {Record<string, any>} T\n * @param {T} [component]\n * @returns {T}\n */\nexport function pop(component) {\n\tconst context_stack_item = component_context;\n\tif (context_stack_item !== null) {\n\t\tif (component !== undefined) {\n\t\t\tcontext_stack_item.x = component;\n\t\t}\n\t\tconst component_effects = context_stack_item.e;\n\t\tif (component_effects !== null) {\n\t\t\tvar previous_effect = active_effect;\n\t\t\tvar previous_reaction = active_reaction;\n\t\t\tcontext_stack_item.e = null;\n\t\t\ttry {\n\t\t\t\tfor (var i = 0; i < component_effects.length; i++) {\n\t\t\t\t\tvar component_effect = component_effects[i];\n\t\t\t\t\tset_active_effect(component_effect.effect);\n\t\t\t\t\tset_active_reaction(component_effect.reaction);\n\t\t\t\t\teffect(component_effect.fn);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_active_effect(previous_effect);\n\t\t\t\tset_active_reaction(previous_reaction);\n\t\t\t}\n\t\t}\n\t\tcomponent_context = context_stack_item.p;\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = context_stack_item.p?.function ?? null;\n\t\t}\n\t\tcontext_stack_item.m = true;\n\t}\n\t// Micro-optimization: Don't set .a above to the empty object\n\t// so it can be garbage-collected when the return here is unused\n\treturn component || /** @type {T} */ ({});\n}\n\n/**\n * Possibly traverse an object and read all its properties so that they're all reactive in case this is `$state`.\n * Does only check first level of an object for performance reasons (heuristic should be good for 99% of all cases).\n * @param {any} value\n * @returns {void}\n */\nexport function deep_read_state(value) {\n\tif (typeof value !== 'object' || !value || value instanceof EventTarget) {\n\t\treturn;\n\t}\n\n\tif (STATE_SYMBOL in value) {\n\t\tdeep_read(value);\n\t} else if (!Array.isArray(value)) {\n\t\tfor (let key in value) {\n\t\t\tconst prop = value[key];\n\t\t\tif (typeof prop === 'object' && prop && STATE_SYMBOL in prop) {\n\t\t\t\tdeep_read(prop);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Deeply traverse an object and read all its properties\n * so that they're all reactive in case this is `$state`\n * @param {any} value\n * @param {Set<any>} visited\n * @returns {void}\n */\nexport function deep_read(value, visited = new Set()) {\n\tif (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t// We don't want to traverse DOM elements\n\t\t!(value instanceof EventTarget) &&\n\t\t!visited.has(value)\n\t) {\n\t\tvisited.add(value);\n\t\t// When working with a possible SvelteDate, this\n\t\t// will ensure we capture changes to it.\n\t\tif (value instanceof Date) {\n\t\t\tvalue.getTime();\n\t\t}\n\t\tfor (let key in value) {\n\t\t\ttry {\n\t\t\t\tdeep_read(value[key], visited);\n\t\t\t} catch (e) {\n\t\t\t\t// continue\n\t\t\t}\n\t\t}\n\t\tconst proto = get_prototype_of(value);\n\t\tif (\n\t\t\tproto !== Object.prototype &&\n\t\t\tproto !== Array.prototype &&\n\t\t\tproto !== Map.prototype &&\n\t\t\tproto !== Set.prototype &&\n\t\t\tproto !== Date.prototype\n\t\t) {\n\t\t\tconst descriptors = get_descriptors(proto);\n\t\t\tfor (let key in descriptors) {\n\t\t\t\tconst get = descriptors[key].get;\n\t\t\t\tif (get) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tget.call(value);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// continue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nif (DEV) {\n\t/**\n\t * @param {string} rune\n\t */\n\tfunction throw_rune_error(rune) {\n\t\tif (!(rune in globalThis)) {\n\t\t\t// TODO if people start adjusting the \"this can contain runes\" config through v-p-s more, adjust this message\n\t\t\t/** @type {any} */\n\t\t\tlet value; // let's hope noone modifies this global, but belts and braces\n\t\t\tObject.defineProperty(globalThis, rune, {\n\t\t\t\tconfigurable: true,\n\t\t\t\t// eslint-disable-next-line getter-return\n\t\t\t\tget: () => {\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\n\t\t\t\t\te.rune_outside_svelte(rune);\n\t\t\t\t},\n\t\t\t\tset: (v) => {\n\t\t\t\t\tvalue = v;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tthrow_rune_error('$state');\n\tthrow_rune_error('$effect');\n\tthrow_rune_error('$derived');\n\tthrow_rune_error('$inspect');\n\tthrow_rune_error('$props');\n\tthrow_rune_error('$bindable');\n}\n","/** @import { TemplateNode } from '#client' */\nimport { hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { DEV } from 'esm-env';\nimport { init_array_prototype_warnings } from '../dev/equality.js';\nimport { get_descriptor } from '../../shared/utils.js';\n\n// export these for reference in the compiled code, making global name deduplication unnecessary\n/** @type {Window} */\nexport var $window;\n\n/** @type {Document} */\nexport var $document;\n\n/** @type {() => Node | null} */\nvar first_child_getter;\n/** @type {() => Node | null} */\nvar next_sibling_getter;\n\n/**\n * Initialize these lazily to avoid issues when using the runtime in a server context\n * where these globals are not available while avoiding a separate server entry point\n */\nexport function init_operations() {\n\tif ($window !== undefined) {\n\t\treturn;\n\t}\n\n\t$window = window;\n\t$document = document;\n\n\tvar element_prototype = Element.prototype;\n\tvar node_prototype = Node.prototype;\n\n\t// @ts-ignore\n\tfirst_child_getter = get_descriptor(node_prototype, 'firstChild').get;\n\t// @ts-ignore\n\tnext_sibling_getter = get_descriptor(node_prototype, 'nextSibling').get;\n\n\t// the following assignments improve perf of lookups on DOM nodes\n\t// @ts-expect-error\n\telement_prototype.__click = undefined;\n\t// @ts-expect-error\n\telement_prototype.__className = '';\n\t// @ts-expect-error\n\telement_prototype.__attributes = null;\n\t// @ts-expect-error\n\telement_prototype.__styles = null;\n\t// @ts-expect-error\n\telement_prototype.__e = undefined;\n\n\t// @ts-expect-error\n\tText.prototype.__t = undefined;\n\n\tif (DEV) {\n\t\t// @ts-expect-error\n\t\telement_prototype.__svelte_meta = null;\n\n\t\tinit_array_prototype_warnings();\n\t}\n}\n\n/**\n * @param {string} value\n * @returns {Text}\n */\nexport function create_text(value = '') {\n\treturn document.createTextNode(value);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_first_child(node) {\n\treturn first_child_getter.call(node);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_next_sibling(node) {\n\treturn next_sibling_getter.call(node);\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @template {Node} N\n * @param {N} node\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function child(node, is_text) {\n\tif (!hydrating) {\n\t\treturn get_first_child(node);\n\t}\n\n\tvar child = /** @type {TemplateNode} */ (get_first_child(hydrate_node));\n\n\t// Child can be null if we have an element with a single child, like `<p>{text}</p>`, where `text` is empty\n\tif (child === null) {\n\t\tchild = hydrate_node.appendChild(create_text());\n\t} else if (is_text && child.nodeType !== 3) {\n\t\tvar text = create_text();\n\t\tchild?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(child);\n\treturn child;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {DocumentFragment | TemplateNode[]} fragment\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function first_child(fragment, is_text) {\n\tif (!hydrating) {\n\t\t// when not hydrating, `fragment` is a `DocumentFragment` (the result of calling `open_frag`)\n\t\tvar first = /** @type {DocumentFragment} */ (get_first_child(/** @type {Node} */ (fragment)));\n\n\t\t// TODO prevent user comments with the empty string when preserveComments is true\n\t\tif (first instanceof Comment && first.data === '') return get_next_sibling(first);\n\n\t\treturn first;\n\t}\n\n\t// if an {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && hydrate_node?.nodeType !== 3) {\n\t\tvar text = create_text();\n\n\t\thydrate_node?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\treturn hydrate_node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {TemplateNode} node\n * @param {number} count\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function sibling(node, count = 1, is_text = false) {\n\tlet next_sibling = hydrating ? hydrate_node : node;\n\n\twhile (count--) {\n\t\tnext_sibling = /** @type {TemplateNode} */ (get_next_sibling(next_sibling));\n\t}\n\n\tif (!hydrating) {\n\t\treturn next_sibling;\n\t}\n\n\tvar type = next_sibling.nodeType;\n\n\t// if a sibling {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && type !== 3) {\n\t\tvar text = create_text();\n\t\tnext_sibling?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(next_sibling);\n\treturn /** @type {TemplateNode} */ (next_sibling);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {void}\n */\nexport function clear_text_content(node) {\n\tnode.textContent = '';\n}\n","/** @import { Location } from 'locate-character' */\nimport { teardown } from '../../reactivity/effects.js';\nimport { define_property, is_array } from '../../../shared/utils.js';\nimport { hydrating } from '../hydration.js';\nimport { queue_micro_task } from '../task.js';\nimport { FILENAME } from '../../../../constants.js';\nimport * as w from '../../warnings.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\n\n/** @type {Set<string>} */\nexport const all_registered_events = new Set();\n\n/** @type {Set<(events: Array<string>) => void>} */\nexport const root_event_handles = new Set();\n\n/**\n * SSR adds onload and onerror attributes to catch those events before the hydration.\n * This function detects those cases, removes the attributes and replays the events.\n * @param {HTMLElement} dom\n */\nexport function replay_events(dom) {\n\tif (!hydrating) return;\n\n\tif (dom.onload) {\n\t\tdom.removeAttribute('onload');\n\t}\n\tif (dom.onerror) {\n\t\tdom.removeAttribute('onerror');\n\t}\n\t// @ts-expect-error\n\tconst event = dom.__e;\n\tif (event !== undefined) {\n\t\t// @ts-expect-error\n\t\tdom.__e = undefined;\n\t\tqueueMicrotask(() => {\n\t\t\tif (dom.isConnected) {\n\t\t\t\tdom.dispatchEvent(event);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * @param {string} event_name\n * @param {EventTarget} dom\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} options\n */\nexport function create_event(event_name, dom, handler, options) {\n\t/**\n\t * @this {EventTarget}\n\t */\n\tfunction target_handler(/** @type {Event} */ event) {\n\t\tif (!options.capture) {\n\t\t\t// Only call in the bubble phase, else delegated events would be called before the capturing events\n\t\t\thandle_event_propagation.call(dom, event);\n\t\t}\n\t\tif (!event.cancelBubble) {\n\t\t\tvar previous_reaction = active_reaction;\n\t\t\tvar previous_effect = active_effect;\n\n\t\t\tset_active_reaction(null);\n\t\t\tset_active_effect(null);\n\t\t\ttry {\n\t\t\t\treturn handler.call(this, event);\n\t\t\t} finally {\n\t\t\t\tset_active_reaction(previous_reaction);\n\t\t\t\tset_active_effect(previous_effect);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Chrome has a bug where pointer events don't work when attached to a DOM element that has been cloned\n\t// with cloneNode() and the DOM element is disconnected from the document. To ensure the event works, we\n\t// defer the attachment till after it's been appended to the document. TODO: remove this once Chrome fixes\n\t// this bug. The same applies to wheel events and touch events.\n\tif (\n\t\tevent_name.startsWith('pointer') ||\n\t\tevent_name.startsWith('touch') ||\n\t\tevent_name === 'wheel'\n\t) {\n\t\tqueue_micro_task(() => {\n\t\t\tdom.addEventListener(event_name, target_handler, options);\n\t\t});\n\t} else {\n\t\tdom.addEventListener(event_name, target_handler, options);\n\t}\n\n\treturn target_handler;\n}\n\n/**\n * Attaches an event handler to an element and returns a function that removes the handler. Using this\n * rather than `addEventListener` will preserve the correct order relative to handlers added declaratively\n * (with attributes like `onclick`), which use event delegation for performance reasons\n *\n * @param {EventTarget} element\n * @param {string} type\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} [options]\n */\nexport function on(element, type, handler, options = {}) {\n\tvar target_handler = create_event(type, element, handler, options);\n\n\treturn () => {\n\t\telement.removeEventListener(type, target_handler, options);\n\t};\n}\n\n/**\n * @param {string} event_name\n * @param {Element} dom\n * @param {EventListener} handler\n * @param {boolean} capture\n * @param {boolean} [passive]\n * @returns {void}\n */\nexport function event(event_name, dom, handler, capture, passive) {\n\tvar options = { capture, passive };\n\tvar target_handler = create_event(event_name, dom, handler, options);\n\n\t// @ts-ignore\n\tif (dom === document.body || dom === window || dom === document) {\n\t\tteardown(() => {\n\t\t\tdom.removeEventListener(event_name, target_handler, options);\n\t\t});\n\t}\n}\n\n/**\n * @param {Array<string>} events\n * @returns {void}\n */\nexport function delegate(events) {\n\tfor (var i = 0; i < events.length; i++) {\n\t\tall_registered_events.add(events[i]);\n\t}\n\n\tfor (var fn of root_event_handles) {\n\t\tfn(events);\n\t}\n}\n\n/**\n * @this {EventTarget}\n * @param {Event} event\n * @returns {void}\n */\nexport function handle_event_propagation(event) {\n\tvar handler_element = this;\n\tvar owner_document = /** @type {Node} */ (handler_element).ownerDocument;\n\tvar event_name = event.type;\n\tvar path = event.composedPath?.() || [];\n\tvar current_target = /** @type {null | Element} */ (path[0] || event.target);\n\n\t// composedPath contains list of nodes the event has propagated through.\n\t// We check __root to skip all nodes below it in case this is a\n\t// parent of the __root node, which indicates that there's nested\n\t// mounted apps. In this case we don't want to trigger events multiple times.\n\tvar path_idx = 0;\n\n\t// @ts-expect-error is added below\n\tvar handled_at = event.__root;\n\n\tif (handled_at) {\n\t\tvar at_idx = path.indexOf(handled_at);\n\t\tif (\n\t\t\tat_idx !== -1 &&\n\t\t\t(handler_element === document || handler_element === /** @type {any} */ (window))\n\t\t) {\n\t\t\t// This is the fallback document listener or a window listener, but the event was already handled\n\t\t\t// -> ignore, but set handle_at to document/window so that we're resetting the event\n\t\t\t// chain in case someone manually dispatches the same event object again.\n\t\t\t// @ts-expect-error\n\t\t\tevent.__root = handler_element;\n\t\t\treturn;\n\t\t}\n\n\t\t// We're deliberately not skipping if the index is higher, because\n\t\t// someone could create an event programmatically and emit it multiple times,\n\t\t// in which case we want to handle the whole propagation chain properly each time.\n\t\t// (this will only be a false negative if the event is dispatched multiple times and\n\t\t// the fallback document listener isn't reached in between, but that's super rare)\n\t\tvar handler_idx = path.indexOf(handler_element);\n\t\tif (handler_idx === -1) {\n\t\t\t// handle_idx can theoretically be -1 (happened in some JSDOM testing scenarios with an event listener on the window object)\n\t\t\t// so guard against that, too, and assume that everything was handled at this point.\n\t\t\treturn;\n\t\t}\n\n\t\tif (at_idx <= handler_idx) {\n\t\t\tpath_idx = at_idx;\n\t\t}\n\t}\n\n\tcurrent_target = /** @type {Element} */ (path[path_idx] || event.target);\n\t// there can only be one delegated event per element, and we either already handled the current target,\n\t// or this is the very first target in the chain which has a non-delegated listener, in which case it's safe\n\t// to handle a possible delegated event on it later (through the root delegation listener for example).\n\tif (current_target === handler_element) return;\n\n\t// Proxy currentTarget to correct target\n\tdefine_property(event, 'currentTarget', {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn current_target || owner_document;\n\t\t}\n\t});\n\n\t// This started because of Chromium issue https://chromestatus.com/feature/5128696823545856,\n\t// where removal or moving of of the DOM can cause sync `blur` events to fire, which can cause logic\n\t// to run inside the current `active_reaction`, which isn't what we want at all. However, on reflection,\n\t// it's probably best that all event handled by Svelte have this behaviour, as we don't really want\n\t// an event handler to run in the context of another reaction or effect.\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\n\ttry {\n\t\t/**\n\t\t * @type {unknown}\n\t\t */\n\t\tvar throw_error;\n\t\t/**\n\t\t * @type {unknown[]}\n\t\t */\n\t\tvar other_errors = [];\n\n\t\twhile (current_target !== null) {\n\t\t\t/** @type {null | Element} */\n\t\t\tvar parent_element =\n\t\t\t\tcurrent_target.assignedSlot ||\n\t\t\t\tcurrent_target.parentNode ||\n\t\t\t\t/** @type {any} */ (current_target).host ||\n\t\t\t\tnull;\n\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tvar delegated = current_target['__' + event_name];\n\n\t\t\t\tif (delegated !== undefined && !(/** @type {any} */ (current_target).disabled)) {\n\t\t\t\t\tif (is_array(delegated)) {\n\t\t\t\t\t\tvar [fn, ...data] = delegated;\n\t\t\t\t\t\tfn.apply(current_target, [event, ...data]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelegated.call(current_target, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (throw_error) {\n\t\t\t\t\tother_errors.push(error);\n\t\t\t\t} else {\n\t\t\t\t\tthrow_error = error;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.cancelBubble || parent_element === handler_element || parent_element === null) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcurrent_target = parent_element;\n\t\t}\n\n\t\tif (throw_error) {\n\t\t\tfor (let error of other_errors) {\n\t\t\t\t// Throw the rest of the errors, one-by-one on a microtask\n\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow throw_error;\n\t\t}\n\t} finally {\n\t\t// @ts-expect-error is used above\n\t\tevent.__root = handler_element;\n\t\t// @ts-ignore remove proxy on currentTarget\n\t\tdelete event.currentTarget;\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * In dev, warn if an event handler is not a function, as it means the\n * user probably called the handler or forgot to add a `() =>`\n * @param {() => (event: Event, ...args: any) => void} thunk\n * @param {EventTarget} element\n * @param {[Event, ...any]} args\n * @param {any} component\n * @param {[number, number]} [loc]\n * @param {boolean} [remove_parens]\n */\nexport function apply(\n\tthunk,\n\telement,\n\targs,\n\tcomponent,\n\tloc,\n\thas_side_effects = false,\n\tremove_parens = false\n) {\n\tlet handler;\n\tlet error;\n\n\ttry {\n\t\thandler = thunk();\n\t} catch (e) {\n\t\terror = e;\n\t}\n\n\tif (typeof handler === 'function') {\n\t\thandler.apply(element, args);\n\t} else if (has_side_effects || handler != null || error) {\n\t\tconst filename = component?.[FILENAME];\n\t\tconst location = loc ? ` at ${filename}:${loc[0]}:${loc[1]}` : ` in ${filename}`;\n\n\t\tconst event_name = args[0].type;\n\t\tconst description = `\\`${event_name}\\` handler${location}`;\n\t\tconst suggestion = remove_parens ? 'remove the trailing `()`' : 'add a leading `() =>`';\n\n\t\tw.event_handler_invalid(description, suggestion);\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n","/** @param {string} html */\nexport function create_fragment_from_html(html) {\n\tvar elem = document.createElement('template');\n\telem.innerHTML = html;\n\treturn elem.content;\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { create_text, get_first_child } from './operations.js';\nimport { create_fragment_from_html } from './reconciler.js';\nimport { active_effect } from '../runtime.js';\nimport { TEMPLATE_FRAGMENT, TEMPLATE_USE_IMPORT_NODE } from '../../../constants.js';\nimport { queue_micro_task } from './task.js';\n\n/**\n * @param {TemplateNode} start\n * @param {TemplateNode | null} end\n */\nexport function assign_nodes(start, end) {\n\tvar effect = /** @type {Effect} */ (active_effect);\n\tif (effect.nodes_start === null) {\n\t\teffect.nodes_start = start;\n\t\teffect.nodes_end = end;\n\t}\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template(content, flags) {\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar use_import_node = (flags & TEMPLATE_USE_IMPORT_NODE) !== 0;\n\n\t/** @type {Node} */\n\tvar node;\n\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (node === undefined) {\n\t\t\tnode = create_fragment_from_html(has_start ? content : '<!>' + content);\n\t\t\tif (!is_fragment) node = /** @type {Node} */ (get_first_child(node));\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (\n\t\t\tuse_import_node ? document.importNode(node, true) : node.cloneNode(true)\n\t\t);\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template_with_script(content, flags) {\n\tvar fn = template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @param {'svg' | 'math'} ns\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function ns_template(content, flags, ns = 'svg') {\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar wrapped = `<${ns}>${has_start ? content : '<!>' + content}</${ns}>`;\n\n\t/** @type {Element | DocumentFragment} */\n\tvar node;\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (!node) {\n\t\t\tvar fragment = /** @type {DocumentFragment} */ (create_fragment_from_html(wrapped));\n\t\t\tvar root = /** @type {Element} */ (get_first_child(fragment));\n\n\t\t\tif (is_fragment) {\n\t\t\t\tnode = document.createDocumentFragment();\n\t\t\t\twhile (get_first_child(root)) {\n\t\t\t\t\tnode.appendChild(/** @type {Node} */ (get_first_child(root)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode = /** @type {Element} */ (get_first_child(root));\n\t\t\t}\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (node.cloneNode(true));\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function svg_template_with_script(content, flags) {\n\tvar fn = ns_template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mathml_template(content, flags) {\n\treturn ns_template(content, flags, 'math');\n}\n\n/**\n * Creating a document fragment from HTML that contains script tags will not execute\n * the scripts. We need to replace the script tags with new ones so that they are executed.\n * @param {Element | DocumentFragment} node\n * @returns {Node | Node[]}\n */\nfunction run_scripts(node) {\n\t// scripts were SSR'd, in which case they will run\n\tif (hydrating) return node;\n\n\tconst is_fragment = node.nodeType === 11;\n\tconst scripts =\n\t\t/** @type {HTMLElement} */ (node).tagName === 'SCRIPT'\n\t\t\t? [/** @type {HTMLScriptElement} */ (node)]\n\t\t\t: node.querySelectorAll('script');\n\tconst effect = /** @type {Effect} */ (active_effect);\n\n\tfor (const script of scripts) {\n\t\tconst clone = document.createElement('script');\n\t\tfor (var attribute of script.attributes) {\n\t\t\tclone.setAttribute(attribute.name, attribute.value);\n\t\t}\n\n\t\tclone.textContent = script.textContent;\n\n\t\t// The script has changed - if it's at the edges, the effect now points at dead nodes\n\t\tif (is_fragment ? node.firstChild === script : node === script) {\n\t\t\teffect.nodes_start = clone;\n\t\t}\n\t\tif (is_fragment ? node.lastChild === script : node === script) {\n\t\t\teffect.nodes_end = clone;\n\t\t}\n\n\t\tscript.replaceWith(clone);\n\t}\n\treturn node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {any} value\n */\nexport function text(value = '') {\n\tif (!hydrating) {\n\t\tvar t = create_text(value + '');\n\t\tassign_nodes(t, t);\n\t\treturn t;\n\t}\n\n\tvar node = hydrate_node;\n\n\tif (node.nodeType !== 3) {\n\t\t// if an {expression} is empty during SSR, we need to insert an empty text node\n\t\tnode.before((node = create_text()));\n\t\tset_hydrate_node(node);\n\t}\n\n\tassign_nodes(node, node);\n\treturn node;\n}\n\nexport function comment() {\n\t// we're not delegating to `template` here for performance reasons\n\tif (hydrating) {\n\t\tassign_nodes(hydrate_node, null);\n\t\treturn hydrate_node;\n\t}\n\n\tvar frag = document.createDocumentFragment();\n\tvar start = document.createComment('');\n\tvar anchor = create_text();\n\tfrag.append(start, anchor);\n\n\tassign_nodes(start, anchor);\n\n\treturn frag;\n}\n\n/**\n * Assign the created (or in hydration mode, traversed) dom elements to the current block\n * and insert the elements into the dom (in client mode).\n * @param {Text | Comment | Element} anchor\n * @param {DocumentFragment | Element} dom\n */\nexport function append(anchor, dom) {\n\tif (hydrating) {\n\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\thydrate_next();\n\t\treturn;\n\t}\n\n\tif (anchor === null) {\n\t\t// edge case — void `<svelte:element>` with content\n\t\treturn;\n\t}\n\n\tanchor.before(/** @type {Node} */ (dom));\n}\n","/** @import { ComponentContext, Effect, TemplateNode } from '#client' */\n/** @import { Component, ComponentType, SvelteComponent, MountOptions } from '../../index.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling,\n\tinit_operations\n} from './dom/operations.js';\nimport { HYDRATION_END, HYDRATION_ERROR, HYDRATION_START } from '../../constants.js';\nimport { push, pop, component_context, active_effect } from './runtime.js';\nimport { effect_root, branch } from './reactivity/effects.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tset_hydrate_node,\n\tset_hydrating\n} from './dom/hydration.js';\nimport { array_from } from '../shared/utils.js';\nimport {\n\tall_registered_events,\n\thandle_event_propagation,\n\troot_event_handles\n} from './dom/elements/events.js';\nimport { reset_head_anchor } from './dom/blocks/svelte-head.js';\nimport * as w from './warnings.js';\nimport * as e from './errors.js';\nimport { assign_nodes } from './dom/template.js';\nimport { is_passive_event } from '../../utils.js';\n\n/**\n * This is normally true — block effects should run their intro transitions —\n * but is false during hydration (unless `options.intro` is `true`) and\n * when creating the children of a `<svelte:element>` that just changed tag\n */\nexport let should_intro = true;\n\n/** @param {boolean} value */\nexport function set_should_intro(value) {\n\tshould_intro = value;\n}\n\n/**\n * @param {Element} text\n * @param {string} value\n * @returns {void}\n */\nexport function set_text(text, value) {\n\t// For objects, we apply string coercion (which might make things like $state array references in the template reactive) before diffing\n\tvar str = value == null ? '' : typeof value === 'object' ? value + '' : value;\n\t// @ts-expect-error\n\tif (str !== (text.__t ??= text.nodeValue)) {\n\t\t// @ts-expect-error\n\t\ttext.__t = str;\n\t\ttext.nodeValue = str == null ? '' : str + '';\n\t}\n}\n\n/**\n * Mounts a component to the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component.\n * Transitions will play during the initial render unless the `intro` option is set to `false`.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {MountOptions<Props>} options\n * @returns {Exports}\n */\nexport function mount(component, options) {\n\treturn _mount(component, options);\n}\n\n/**\n * Hydrates a component on the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {{} extends Props ? {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops?: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t} : {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nexport function hydrate(component, options) {\n\tinit_operations();\n\toptions.intro = options.intro ?? false;\n\tconst target = options.target;\n\tconst was_hydrating = hydrating;\n\tconst previous_hydrate_node = hydrate_node;\n\n\ttry {\n\t\tvar anchor = /** @type {TemplateNode} */ (get_first_child(target));\n\t\twhile (\n\t\t\tanchor &&\n\t\t\t(anchor.nodeType !== 8 || /** @type {Comment} */ (anchor).data !== HYDRATION_START)\n\t\t) {\n\t\t\tanchor = /** @type {TemplateNode} */ (get_next_sibling(anchor));\n\t\t}\n\n\t\tif (!anchor) {\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(true);\n\t\tset_hydrate_node(/** @type {Comment} */ (anchor));\n\t\thydrate_next();\n\n\t\tconst instance = _mount(component, { ...options, anchor });\n\n\t\tif (\n\t\t\thydrate_node === null ||\n\t\t\thydrate_node.nodeType !== 8 ||\n\t\t\t/** @type {Comment} */ (hydrate_node).data !== HYDRATION_END\n\t\t) {\n\t\t\tw.hydration_mismatch();\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(false);\n\n\t\treturn /**  @type {Exports} */ (instance);\n\t} catch (error) {\n\t\tif (error === HYDRATION_ERROR) {\n\t\t\tif (options.recover === false) {\n\t\t\t\te.hydration_failed();\n\t\t\t}\n\n\t\t\t// If an error occured above, the operations might not yet have been initialised.\n\t\t\tinit_operations();\n\t\t\tclear_text_content(target);\n\n\t\t\tset_hydrating(false);\n\t\t\treturn mount(component, options);\n\t\t}\n\n\t\tthrow error;\n\t} finally {\n\t\tset_hydrating(was_hydrating);\n\t\tset_hydrate_node(previous_hydrate_node);\n\t\treset_head_anchor();\n\t}\n}\n\n/** @type {Map<string, number>} */\nconst document_listeners = new Map();\n\n/**\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<any>> | Component<any>} Component\n * @param {MountOptions} options\n * @returns {Exports}\n */\nfunction _mount(Component, { target, anchor, props = {}, events, context, intro = true }) {\n\tinit_operations();\n\n\tvar registered_events = new Set();\n\n\t/** @param {Array<string>} events */\n\tvar event_handle = (events) => {\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tvar event_name = events[i];\n\n\t\t\tif (registered_events.has(event_name)) continue;\n\t\t\tregistered_events.add(event_name);\n\n\t\t\tvar passive = is_passive_event(event_name);\n\n\t\t\t// Add the event listener to both the container and the document.\n\t\t\t// The container listener ensures we catch events from within in case\n\t\t\t// the outer content stops propagation of the event.\n\t\t\ttarget.addEventListener(event_name, handle_event_propagation, { passive });\n\n\t\t\tvar n = document_listeners.get(event_name);\n\n\t\t\tif (n === undefined) {\n\t\t\t\t// The document listener ensures we catch events that originate from elements that were\n\t\t\t\t// manually moved outside of the container (e.g. via manual portals).\n\t\t\t\tdocument.addEventListener(event_name, handle_event_propagation, { passive });\n\t\t\t\tdocument_listeners.set(event_name, 1);\n\t\t\t} else {\n\t\t\t\tdocument_listeners.set(event_name, n + 1);\n\t\t\t}\n\t\t}\n\t};\n\n\tevent_handle(array_from(all_registered_events));\n\troot_event_handles.add(event_handle);\n\n\t/** @type {Exports} */\n\t// @ts-expect-error will be defined because the render effect runs synchronously\n\tvar component = undefined;\n\n\tvar unmount = effect_root(() => {\n\t\tvar anchor_node = anchor ?? target.appendChild(create_text());\n\n\t\tbranch(() => {\n\t\t\tif (context) {\n\t\t\t\tpush({});\n\t\t\t\tvar ctx = /** @type {ComponentContext} */ (component_context);\n\t\t\t\tctx.c = context;\n\t\t\t}\n\n\t\t\tif (events) {\n\t\t\t\t// We can't spread the object or else we'd lose the state proxy stuff, if it is one\n\t\t\t\t/** @type {any} */ (props).$$events = events;\n\t\t\t}\n\n\t\t\tif (hydrating) {\n\t\t\t\tassign_nodes(/** @type {TemplateNode} */ (anchor_node), null);\n\t\t\t}\n\n\t\t\tshould_intro = intro;\n\t\t\t// @ts-expect-error the public typings are not what the actual function looks like\n\t\t\tcomponent = Component(anchor_node, props) || {};\n\t\t\tshould_intro = true;\n\n\t\t\tif (hydrating) {\n\t\t\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\t\t}\n\n\t\t\tif (context) {\n\t\t\t\tpop();\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tfor (var event_name of registered_events) {\n\t\t\t\ttarget.removeEventListener(event_name, handle_event_propagation);\n\n\t\t\t\tvar n = /** @type {number} */ (document_listeners.get(event_name));\n\n\t\t\t\tif (--n === 0) {\n\t\t\t\t\tdocument.removeEventListener(event_name, handle_event_propagation);\n\t\t\t\t\tdocument_listeners.delete(event_name);\n\t\t\t\t} else {\n\t\t\t\t\tdocument_listeners.set(event_name, n);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\troot_event_handles.delete(event_handle);\n\t\t\tmounted_components.delete(component);\n\t\t\tif (anchor_node !== anchor) {\n\t\t\t\tanchor_node.parentNode?.removeChild(anchor_node);\n\t\t\t}\n\t\t};\n\t});\n\n\tmounted_components.set(component, unmount);\n\treturn component;\n}\n\n/**\n * References of the components that were mounted or hydrated.\n * Uses a `WeakMap` to avoid memory leaks.\n */\nlet mounted_components = new WeakMap();\n\n/**\n * Unmounts a component that was previously mounted using `mount` or `hydrate`.\n * @param {Record<string, any>} component\n */\nexport function unmount(component) {\n\tconst fn = mounted_components.get(component);\n\n\tif (fn) {\n\t\tfn();\n\t} else if (DEV) {\n\t\tw.lifecycle_double_unmount();\n\t}\n}\n","import { hydrating } from '../hydration.js';\nimport { clear_text_content, get_first_child } from '../operations.js';\nimport { queue_micro_task } from '../task.js';\n\n/**\n * @param {HTMLElement} dom\n * @param {boolean} value\n * @returns {void}\n */\nexport function autofocus(dom, value) {\n\tif (value) {\n\t\tconst body = document.body;\n\t\tdom.autofocus = true;\n\n\t\tqueue_micro_task(() => {\n\t\t\tif (document.activeElement === body) {\n\t\t\t\tdom.focus();\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * The child of a textarea actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLTextAreaElement} dom\n * @returns {void}\n */\nexport function remove_textarea_child(dom) {\n\tif (hydrating && get_first_child(dom) !== null) {\n\t\tclear_text_content(dom);\n\t}\n}\n\nlet listening_to_form_reset = false;\n\nexport function add_form_reset_listener() {\n\tif (!listening_to_form_reset) {\n\t\tlistening_to_form_reset = true;\n\t\tdocument.addEventListener(\n\t\t\t'reset',\n\t\t\t(evt) => {\n\t\t\t\t// Needs to happen one tick later or else the dom properties of the form\n\t\t\t\t// elements have not updated to their reset values yet\n\t\t\t\tPromise.resolve().then(() => {\n\t\t\t\t\tif (!evt.defaultPrevented) {\n\t\t\t\t\t\tfor (const e of /**@type {HTMLFormElement} */ (evt.target).elements) {\n\t\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\t\te.__on_r?.();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t// In the capture phase to guarantee we get noticed of it (no possiblity of stopPropagation)\n\t\t\t{ capture: true }\n\t\t);\n\t}\n}\n","import { teardown } from '../../../reactivity/effects.js';\nimport { add_form_reset_listener } from '../misc.js';\n\n/**\n * Fires the handler once immediately (unless corresponding arg is set to `false`),\n * then listens to the given events until the render effect context is destroyed\n * @param {EventTarget} target\n * @param {Array<string>} events\n * @param {(event?: Event) => void} handler\n * @param {any} call_handler_immediately\n */\nexport function listen(target, events, handler, call_handler_immediately = true) {\n\tif (call_handler_immediately) {\n\t\thandler();\n\t}\n\n\tfor (var name of events) {\n\t\ttarget.addEventListener(name, handler);\n\t}\n\n\tteardown(() => {\n\t\tfor (var name of events) {\n\t\t\ttarget.removeEventListener(name, handler);\n\t\t}\n\t});\n}\n\n/**\n * Listen to the given event, and then instantiate a global form reset listener if not already done,\n * to notify all bindings when the form is reset\n * @param {HTMLElement} element\n * @param {string} event\n * @param {() => void} handler\n * @param {() => void} [on_reset]\n */\nexport function listen_to_event_and_reset_event(element, event, handler, on_reset = handler) {\n\telement.addEventListener(event, handler);\n\t// @ts-expect-error\n\tconst prev = element.__on_r;\n\tif (prev) {\n\t\t// special case for checkbox that can have multiple binds (group & checked)\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => {\n\t\t\tprev();\n\t\t\ton_reset();\n\t\t};\n\t} else {\n\t\t// @ts-expect-error\n\t\telement.__on_r = on_reset;\n\t}\n\n\tadd_form_reset_listener();\n}\n","import { DEV } from 'esm-env';\nimport { render_effect, teardown } from '../../../reactivity/effects.js';\nimport { listen_to_event_and_reset_event } from './shared.js';\nimport * as e from '../../../errors.js';\nimport { is } from '../../../proxy.js';\nimport { queue_micro_task } from '../../task.js';\nimport { hydrating } from '../../hydration.js';\nimport { is_runes } from '../../../runtime.js';\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_value(input, get, set = get) {\n\tvar runes = is_runes();\n\n\tlisten_to_event_and_reset_event(input, 'input', () => {\n\t\tif (DEV && input.type === 'checkbox') {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.bind_invalid_checkbox_value();\n\t\t}\n\n\t\t/** @type {unknown} */\n\t\tvar value = is_numberlike_input(input) ? to_number(input.value) : input.value;\n\t\tset(value);\n\n\t\t// In runes mode, respect any validation in accessors (doesn't apply in legacy mode,\n\t\t// because we use mutable state which ensures the render effect always runs)\n\t\tif (runes && value !== (value = get())) {\n\t\t\t// @ts-expect-error the value is coerced on assignment\n\t\t\tinput.value = value ?? '';\n\t\t}\n\t});\n\n\trender_effect(() => {\n\t\tif (DEV && input.type === 'checkbox') {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.bind_invalid_checkbox_value();\n\t\t}\n\n\t\tvar value = get();\n\n\t\t// If we are hydrating and the value has since changed, then use the update value\n\t\t// from the input instead.\n\t\tif (hydrating && input.defaultValue !== input.value) {\n\t\t\tset(input.value);\n\t\t\treturn;\n\t\t}\n\n\t\tif (is_numberlike_input(input) && value === to_number(input.value)) {\n\t\t\t// handles 0 vs 00 case (see https://github.com/sveltejs/svelte/issues/9959)\n\t\t\treturn;\n\t\t}\n\n\t\tif (input.type === 'date' && !value && !input.value) {\n\t\t\t// Handles the case where a temporarily invalid date is set (while typing, for example with a leading 0 for the day)\n\t\t\t// and prevents this state from clearing the other parts of the date input (see https://github.com/sveltejs/svelte/issues/7897)\n\t\t\treturn;\n\t\t}\n\n\t\t// don't set the value of the input if it's the same to allow\n\t\t// minlength to work properly\n\t\tif (value !== input.value) {\n\t\t\t// @ts-expect-error the value is coerced on assignment\n\t\t\tinput.value = value ?? '';\n\t\t}\n\t});\n}\n\n/** @type {Set<HTMLInputElement[]>} */\nconst pending = new Set();\n\n/**\n * @param {HTMLInputElement[]} inputs\n * @param {null | [number]} group_index\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_group(inputs, group_index, input, get, set = get) {\n\tvar is_checkbox = input.getAttribute('type') === 'checkbox';\n\tvar binding_group = inputs;\n\n\t// needs to be let or related code isn't treeshaken out if it's always false\n\tlet hydration_mismatch = false;\n\n\tif (group_index !== null) {\n\t\tfor (var index of group_index) {\n\t\t\t// @ts-expect-error\n\t\t\tbinding_group = binding_group[index] ??= [];\n\t\t}\n\t}\n\n\tbinding_group.push(input);\n\n\tlisten_to_event_and_reset_event(\n\t\tinput,\n\t\t'change',\n\t\t() => {\n\t\t\t// @ts-ignore\n\t\t\tvar value = input.__value;\n\n\t\t\tif (is_checkbox) {\n\t\t\t\tvalue = get_binding_group_value(binding_group, value, input.checked);\n\t\t\t}\n\n\t\t\tset(value);\n\t\t},\n\t\t// TODO better default value handling\n\t\t() => set(is_checkbox ? [] : null)\n\t);\n\n\trender_effect(() => {\n\t\tvar value = get();\n\n\t\t// If we are hydrating and the value has since changed, then use the update value\n\t\t// from the input instead.\n\t\tif (hydrating && input.defaultChecked !== input.checked) {\n\t\t\thydration_mismatch = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (is_checkbox) {\n\t\t\tvalue = value || [];\n\t\t\t// @ts-ignore\n\t\t\tinput.checked = value.includes(input.__value);\n\t\t} else {\n\t\t\t// @ts-ignore\n\t\t\tinput.checked = is(input.__value, value);\n\t\t}\n\t});\n\n\tteardown(() => {\n\t\tvar index = binding_group.indexOf(input);\n\n\t\tif (index !== -1) {\n\t\t\tbinding_group.splice(index, 1);\n\t\t}\n\t});\n\n\tif (!pending.has(binding_group)) {\n\t\tpending.add(binding_group);\n\n\t\tqueue_micro_task(() => {\n\t\t\t// necessary to maintain binding group order in all insertion scenarios\n\t\t\tbinding_group.sort((a, b) => (a.compareDocumentPosition(b) === 4 ? -1 : 1));\n\t\t\tpending.delete(binding_group);\n\t\t});\n\t}\n\n\tqueue_micro_task(() => {\n\t\tif (hydration_mismatch) {\n\t\t\tvar value;\n\n\t\t\tif (is_checkbox) {\n\t\t\t\tvalue = get_binding_group_value(binding_group, value, input.checked);\n\t\t\t} else {\n\t\t\t\tvar hydration_input = binding_group.find((input) => input.checked);\n\t\t\t\t// @ts-ignore\n\t\t\t\tvalue = hydration_input?.__value;\n\t\t\t}\n\n\t\t\tset(value);\n\t\t}\n\t});\n}\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_checked(input, get, set = get) {\n\tlisten_to_event_and_reset_event(input, 'change', () => {\n\t\tvar value = input.checked;\n\t\tset(value);\n\t});\n\n\tif (get() == undefined) {\n\t\tset(false);\n\t}\n\n\trender_effect(() => {\n\t\tvar value = get();\n\t\tinput.checked = Boolean(value);\n\t});\n}\n\n/**\n * @template V\n * @param {Array<HTMLInputElement>} group\n * @param {V} __value\n * @param {boolean} checked\n * @returns {V[]}\n */\nfunction get_binding_group_value(group, __value, checked) {\n\tvar value = new Set();\n\n\tfor (var i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) {\n\t\t\t// @ts-ignore\n\t\t\tvalue.add(group[i].__value);\n\t\t}\n\t}\n\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement} input\n */\nfunction is_numberlike_input(input) {\n\tvar type = input.type;\n\treturn type === 'number' || type === 'range';\n}\n\n/**\n * @param {string} value\n */\nfunction to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => FileList | null} get\n * @param {(value: FileList | null) => void} set\n */\nexport function bind_files(input, get, set = get) {\n\tlisten_to_event_and_reset_event(input, 'change', () => {\n\t\tset(input.files);\n\t});\n\n\trender_effect(() => {\n\t\tinput.files = get();\n\t});\n}\n","<script>\n  import { onMount } from \"svelte\";\n  let inputText = \"\";\n  let translation = \"\";\n  let targetLang = \"Chinese\";\n\n  function handleTranslate() {\n    chrome.runtime.sendMessage(\n      { type: \"TRANSLATE_TEXT\", text: inputText, targetLang },\n      (response) => {\n        if (response && response.translation) {\n          translation = response.translation;\n        } else {\n          translation = \"Error translating text.\";\n        }\n      }\n    );\n  }\n\n  function toggleLanguage() {\n    targetLang = targetLang === \"Chinese\" ? \"English\" : \"Chinese\";\n  }\n</script>\n\n<main>\n  <h2>AI Republic Translate</h2>\n  <textarea bind:value={inputText} placeholder=\"Enter text to translate\"></textarea>\n  <button on:click={handleTranslate}>Translate to {targetLang}</button>\n  <button on:click={toggleLanguage}>\n    Switch to {targetLang === \"Chinese\" ? \"English\" : \"Chinese\"}\n  </button>\n  <p>Translation: {translation}</p>\n</main>\n\n<style>\n  main {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding: 10px;\n    font-family: Arial, sans-serif;\n  }\n\n  textarea {\n    width: 100%;\n    height: 80px;\n    padding: 8px;\n    font-size: 14px;\n    resize: none;\n  }\n\n  button {\n    padding: 8px 12px;\n    font-size: 14px;\n    background-color: #007bff;\n    color: #fff;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n  }\n\n  button:hover {\n    background-color: #0056b3;\n  }\n\n  h2 {\n    font-size: 18px;\n    margin-bottom: 8px;\n  }\n\n  p {\n    font-size: 14px;\n    color: #333;\n  }\n</style>\n","import App from './popup.svelte';\n\nconst app = new App({\n  target: document.getElementById('svelte-root') // Ensure this matches the id in popup.html\n});\n\nexport default app;\n"],"names":["e.state_unsafe_mutation","is_micro_task_queued","e.effect_update_depth_exceeded","e.state_unsafe_local_read","$.set","$.set_text","$.get","$.bind_value","App"],"mappings":";;;CAAA;CASO,MAAM,cAAc,GAAG,GAAG;;CCPjC,IAAI,OAAO,MAAM,KAAK,WAAW;CACjC;CACA,CAAC,CAAC,MAAM,CAAC,QAAQ,KAAK,EAAE,CAAC,EAAE,IAAI,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC;;CCatD,MAAM,iBAAiB,GAAG,CAAC,CAAC;CAC5B,MAAM,wBAAwB,GAAG,CAAC,IAAI,CAAC;;CCjBvC,MAAM,GAAG,GAAG,KAAK;;CCDxB;CACA;CACO,IAAI,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC;CAG7B,IAAI,eAAe,GAAG,MAAM,CAAC,cAAc,CAAC;AAiCnD;CACA;CACO,SAAS,OAAO,CAAC,GAAG,EAAE;CAC7B,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;CACtC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;CACX,EAAE;CACF;;CC5CO,MAAM,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC;CACvB,MAAM,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC;CACtB,MAAM,aAAa,GAAG,CAAC,IAAI,CAAC,CAAC;CAC7B,MAAM,YAAY,GAAG,CAAC,IAAI,CAAC,CAAC;CAC5B,MAAM,aAAa,GAAG,CAAC,IAAI,CAAC,CAAC;CAC7B,MAAM,WAAW,GAAG,CAAC,IAAI,CAAC,CAAC;CAC3B,MAAM,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC;CACvB,MAAM,YAAY,GAAG,CAAC,IAAI,CAAC,CAAC;CAC5B,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC;CACrB,MAAM,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC;CACtB,MAAM,WAAW,GAAG,CAAC,IAAI,EAAE,CAAC;CAC5B,MAAM,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC;CACtB,MAAM,SAAS,GAAG,CAAC,IAAI,EAAE,CAAC;CAC1B,MAAM,UAAU,GAAG,CAAC,IAAI,EAAE,CAAC;CAM3B,MAAM,WAAW,GAAG,CAAC,IAAI,EAAE,CAAC;CAC5B,MAAM,kBAAkB,GAAG,CAAC,IAAI,EAAE;;CCpBzC;CACA;CACO,SAAS,MAAM,CAAC,KAAK,EAAE;CAC9B,CAAC,OAAO,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC;CACzB,CAAC;AACD;CACA;CACA;CACA;CACA;CACA;CACO,SAAS,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE;CACrC,CAAC,OAAO,CAAC,IAAI,CAAC;CACd,IAAI,CAAC,IAAI,CAAC;CACV,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,OAAO,CAAC,KAAK,QAAQ,CAAC,IAAI,OAAO,CAAC,KAAK,UAAU,CAAC;CAChF,CAAC;AACD;CACA;CACO,SAAS,WAAW,CAAC,KAAK,EAAE;CACnC,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;CACvC;;CCpBA;AAmLA;CACA;CACA;CACA;CACA;CACO,SAAS,4BAA4B,GAAG;CAC/C,CAKQ;CACR;CACA,EAAE,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;CAClD,EAAE;CACF,CAAC;AAqID;CACA;CACA;CACA;CACA;CACO,SAAS,uBAAuB,GAAG;CAC1C,CAKQ;CACR;CACA,EAAE,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;CAC7C,EAAE;CACF,CAAC;AACD;CACA;CACA;CACA;CACA;CACO,SAAS,qBAAqB,GAAG;CACxC,CAKQ;CACR;CACA,EAAE,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;CAC3C,EAAE;CACF;;CCtWA;AA2CA;CACA;CACA;CACA;CACA;CACA;CACO,SAAS,MAAM,CAAC,CAAC,EAAE;CAC1B,CAAC,OAAO;CACR,EAAE,CAAC,EAAE,CAAC;CACN,EAAE,CAAC;CACH,EAAE,SAAS,EAAE,IAAI;CACjB,EAAE,MAAM;CACR,EAAE,OAAO,EAAE,CAAC;CACZ,EAAE,CAAC;CACH,CAAC;AASD;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACO,SAAS,cAAc,CAAC,aAAa,EAAE,SAAS,GAAG,KAAK,EAAE;CACjE,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;CACjC,CAAC,IAAI,CAAC,SAAS,EAAE;CACjB,EAAE,CAAC,CAAC,MAAM,GAAG,WAAW,CAAC;CACzB,EAAE;AACF;CACA;CACA;CACA,CAAC,IAAI,iBAAiB,KAAK,IAAI,IAAI,iBAAiB,CAAC,CAAC,KAAK,IAAI,EAAE;CACjE,EAAE,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;CACzC,EAAE;AACF;CACA,CAAC,OAAO,CAAC,CAAC;CACV,CAAC;AACD;CACA;CACA;CACA;CACA;CACA;CACA;CACO,SAAS,aAAa,CAAC,CAAC,EAAE,SAAS,GAAG,KAAK,EAAE;CACpD,CAAC,OAAO,mBAAmB,CAAC,cAAc,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;CAC1D,CAAC;AACD;CACA;CACA;CACA;CACA;CACA;CACA,SAAS,mBAAmB,CAAC,MAAM,EAAE;CACrC,CAAC,IAAI,eAAe,KAAK,IAAI,IAAI,CAAC,eAAe,CAAC,CAAC,GAAG,OAAO,MAAM,CAAC,EAAE;CACtE,EAAE,IAAI,eAAe,KAAK,IAAI,EAAE;CAChC,GAAG,mBAAmB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;CACjC,GAAG,MAAM;CACT,GAAG,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;CAChC,GAAG;CACH,EAAE;AACF;CACA,CAAC,OAAO,MAAM,CAAC;CACf,CAAC;AAcD;CACA;CACA;CACA;CACA;CACA;CACA;CACO,SAAS,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE;CACnC,CAAC;CACD,EAAE,eAAe,KAAK,IAAI;CAC1B,EAAE,QAAQ,EAAE;CACZ,EAAE,CAAC,eAAe,CAAC,CAAC,IAAI,OAAO,GAAG,YAAY,CAAC,MAAM,CAAC;CACtD;CACA;CACA,GAAG,eAAe,KAAK,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;CACjE,GAAG;CACH,EAAEA,qBAAuB,EAAE,CAAC;CAC5B,EAAE;AACF;CACA,CAAC,OAAO,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;CACpC,CAAC;AACD;CACA;CACA;CACA;CACA;CACA;CACA;CACO,SAAS,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE;CAC5C,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;CAC5B,EAAE,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC;CACnB,EAAE,MAAM,CAAC,OAAO,GAAG,iBAAiB,EAAE,CAAC;AACvC;CACA,EAAE,cAAc,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAChC;CACA;CACA;CACA;CACA;CACA;CACA,EAAE;CACF,GAAG,QAAQ,EAAE;CACb,GAAG,aAAa,KAAK,IAAI;CACzB,GAAG,CAAC,aAAa,CAAC,CAAC,GAAG,KAAK,MAAM,CAAC;CAClC,GAAG,CAAC,aAAa,CAAC,CAAC,GAAG,aAAa,MAAM,CAAC;CAC1C,IAAI;CACJ,GAAG,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;CACvD,IAAI,iBAAiB,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;CAC5C,IAAI,eAAe,CAAC,aAAa,CAAC,CAAC;CACnC,IAAI,MAAM;CACV,IAAI,IAAI,gBAAgB,KAAK,IAAI,EAAE;CACnC,KAAK,oBAAoB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;CACpC,KAAK,MAAM;CACX,KAAK,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;CACnC,KAAK;CACL,IAAI;CACJ,GAAG;CAsBH,EAAE;AACF;CACA,CAAC,OAAO,KAAK,CAAC;CACd,CAAC;AACD;CACA;CACA;CACA;CACA;CACA;CACA,SAAS,cAAc,CAAC,MAAM,EAAE,MAAM,EAAE;CACxC,CAAC,IAAI,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;CAClC,CAAC,IAAI,SAAS,KAAK,IAAI,EAAE,OAAO;AAChC;CACA,CAAC,IAAI,KAAK,GAAG,QAAQ,EAAE,CAAC;CACxB,CAAC,IAAI,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;AAC/B;CACA,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;CAClC,EAAE,IAAI,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;CAC9B,EAAE,IAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC;AACzB;CACA;CACA,EAAE,IAAI,CAAC,KAAK,GAAG,KAAK,MAAM,CAAC,EAAE,SAAS;AACtC;CACA;CACA,EAAE,IAAI,CAAC,KAAK,IAAI,QAAQ,KAAK,aAAa,EAAE,SAAS;AAOrD;CACA,EAAE,iBAAiB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;AACtC;CACA;CACA,EAAE,IAAI,CAAC,KAAK,IAAI,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,EAAE;CACzC,GAAG,IAAI,CAAC,KAAK,GAAG,OAAO,MAAM,CAAC,EAAE;CAChC,IAAI,cAAc,yBAAyB,QAAQ,GAAG,WAAW,CAAC,CAAC;CACnE,IAAI,MAAM;CACV,IAAI,eAAe,wBAAwB,QAAQ,EAAE,CAAC;CACtD,IAAI;CACJ,GAAG;CACH,EAAE;CACF;;CC1PA;AA6EA;CACA;CACA;CACA;CACA;CACA,SAAS,wBAAwB,CAAC,OAAO,EAAE;CAC3C,CAAC,IAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;AACjC;CACA,CAAC,IAAI,QAAQ,KAAK,IAAI,EAAE;CACxB,EAAE,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC1B;CACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;CAC/C,GAAG,IAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;CAC3B,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,OAAO,MAAM,CAAC,EAAE;CAClC,IAAI,eAAe,yBAAyB,KAAK,EAAE,CAAC;CACpD,IAAI,MAAM;CACV,IAAI,cAAc,wBAAwB,KAAK,EAAE,CAAC;CAClD,IAAI;CACJ,GAAG;CACH,EAAE;CACF,CAAC;AAQD;CACA;CACA;CACA;CACA;CACA;CACO,SAAS,eAAe,CAAC,OAAO,EAAE;CACzC,CAAC,IAAI,KAAK,CAAC;CACX,CAAC,IAAI,kBAAkB,GAAG,aAAa,CAAC;AACxC;CACA,CAAC,iBAAiB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACnC;CACA,CAiBQ;CACR,EAAE,IAAI;CACN,GAAG,wBAAwB,CAAC,OAAO,CAAC,CAAC;CACrC,GAAG,KAAK,GAAG,eAAe,CAAC,OAAO,CAAC,CAAC;CACpC,GAAG,SAAS;CACZ,GAAG,iBAAiB,CAAC,kBAAkB,CAAC,CAAC;CACzC,GAAG;CACH,EAAE;AACF;CACA,CAAC,OAAO,KAAK,CAAC;CACd,CAAC;AACD;CACA;CACA;CACA;CACA;CACO,SAAS,cAAc,CAAC,OAAO,EAAE;CACxC,CAAC,IAAI,KAAK,GAAG,eAAe,CAAC,OAAO,CAAC,CAAC;CACtC,CAAC,IAAI,MAAM;CACX,EAAE,CAAC,aAAa,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,MAAM,CAAC,KAAK,OAAO,CAAC,IAAI,KAAK,IAAI,GAAG,WAAW,GAAG,KAAK,CAAC;AAChG;CACA,CAAC,iBAAiB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AACpC;CACA,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;CAC7B,EAAE,OAAO,CAAC,CAAC,GAAG,KAAK,CAAC;CACpB,EAAE,OAAO,CAAC,OAAO,GAAG,iBAAiB,EAAE,CAAC;CACxC,EAAE;CACF,CAAC;AACD;CACA;CACA;CACA;CACA;CACO,SAAS,eAAe,CAAC,MAAM,EAAE;CACxC,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;CAClC,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;CAC7B,CAAC,iBAAiB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;AACtC;CACA;CACA,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;CACjF;;CC9KA;AA8DA;CACA;CACA;CACA;CACA;CACA,SAAS,WAAW,CAAC,MAAM,EAAE,aAAa,EAAE;CAC5C,CAAC,IAAI,WAAW,GAAG,aAAa,CAAC,IAAI,CAAC;CACtC,CAAC,IAAI,WAAW,KAAK,IAAI,EAAE;CAC3B,EAAE,aAAa,CAAC,IAAI,GAAG,aAAa,CAAC,KAAK,GAAG,MAAM,CAAC;CACpD,EAAE,MAAM;CACR,EAAE,WAAW,CAAC,IAAI,GAAG,MAAM,CAAC;CAC5B,EAAE,MAAM,CAAC,IAAI,GAAG,WAAW,CAAC;CAC5B,EAAE,aAAa,CAAC,IAAI,GAAG,MAAM,CAAC;CAC9B,EAAE;CACF,CAAC;AACD;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,SAAS,aAAa,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE;CACpD,CAAC,IAAI,OAAO,GAAG,CAAC,IAAI,GAAG,WAAW,MAAM,CAAC,CAAC;CAC1C,CAAC,IAAI,aAAa,GAAG,aAAa,CAAC;AAQnC;CACA;CACA,CAAC,IAAI,MAAM,GAAG;CACd,EAAE,GAAG,EAAE,iBAAiB;CACxB,EAAE,IAAI,EAAE,IAAI;CACZ,EAAE,QAAQ,EAAE,IAAI;CAChB,EAAE,WAAW,EAAE,IAAI;CACnB,EAAE,SAAS,EAAE,IAAI;CACjB,EAAE,CAAC,EAAE,IAAI,GAAG,KAAK;CACjB,EAAE,KAAK,EAAE,IAAI;CACb,EAAE,EAAE;CACJ,EAAE,IAAI,EAAE,IAAI;CACZ,EAAE,IAAI,EAAE,IAAI;CACZ,EAAE,MAAM,EAAE,OAAO,GAAG,IAAI,GAAG,aAAa;CACxC,EAAE,IAAI,EAAE,IAAI;CACZ,EAAE,QAAQ,EAAE,IAAI;CAChB,EAAE,WAAW,EAAE,IAAI;CACnB,EAAE,OAAO,EAAE,CAAC;CACZ,EAAE,CAAC;AAKH;CACA,CAAC,IAAI,IAAI,EAAE;CACX,EAAE,IAAI,0BAA0B,GAAG,kBAAkB,CAAC;AACtD;CACA,EAAE,IAAI;CACN,GAAG,sBAAsB,CAAC,IAAI,CAAC,CAAC;CAChC,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC;CACzB,GAAG,MAAM,CAAC,CAAC,IAAI,UAAU,CAAC;CAC1B,GAAG,CAAC,OAAO,CAAC,EAAE;CACd,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC;CAC1B,GAAG,MAAM,CAAC,CAAC;CACX,GAAG,SAAS;CACZ,GAAG,sBAAsB,CAAC,0BAA0B,CAAC,CAAC;CACtD,GAAG;CACH,EAAE,MAAM,IAAI,EAAE,KAAK,IAAI,EAAE;CACzB,EAAE,eAAe,CAAC,MAAM,CAAC,CAAC;CAC1B,EAAE;AACF;CACA;CACA;CACA,CAAC,IAAI,KAAK;CACV,EAAE,IAAI;CACN,EAAE,MAAM,CAAC,IAAI,KAAK,IAAI;CACtB,EAAE,MAAM,CAAC,KAAK,KAAK,IAAI;CACvB,EAAE,MAAM,CAAC,WAAW,KAAK,IAAI;CAC7B,EAAE,MAAM,CAAC,QAAQ,KAAK,IAAI;CAC1B,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,kBAAkB,MAAM,CAAC,CAAC;AACxC;CACA,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;CACjC,EAAE,IAAI,aAAa,KAAK,IAAI,EAAE;CAC9B,GAAG,WAAW,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;CACtC,GAAG;AACH;CACA;CACA,EAAE,IAAI,eAAe,KAAK,IAAI,IAAI,CAAC,eAAe,CAAC,CAAC,GAAG,OAAO,MAAM,CAAC,EAAE;CACvE,GAAG,IAAI,OAAO,2BAA2B,eAAe,CAAC,CAAC;CAC1D,GAAG,CAAC,OAAO,CAAC,QAAQ,KAAK,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;CAC1C,GAAG;CACH,EAAE;AACF;CACA,CAAC,OAAO,MAAM,CAAC;CACf,CAAC;AAeD;CACA;CACA;CACA;CACO,SAAS,QAAQ,CAAC,EAAE,EAAE;CAC7B,CAAC,MAAM,MAAM,GAAG,aAAa,CAAC,aAAa,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;CAC1D,CAAC,iBAAiB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;CAClC,CAAC,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC;CACtB,CAAC,OAAO,MAAM,CAAC;CACf,CAAC;AA+HD;CACA;CACA;CACA;CACA;CACO,SAAS,aAAa,CAAC,EAAE,EAAE;CAClC,CAAC,OAAO,aAAa,CAAC,aAAa,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;CAC/C,CAAC;AACD;CACA;CACA;CACA;CACA;CACO,SAAS,eAAe,CAAC,EAAE,EAAE;CAMpC,CAAC,OAAO,KAAK,CAAC,EAAE,CAAC,CAAC;CAClB,CAAC;AACD;CACA;CACA;CACA;CACA;CACO,SAAS,KAAK,CAAC,EAAE,EAAE,KAAK,GAAG,CAAC,EAAE;CACrC,CAAC,OAAO,aAAa,CAAC,aAAa,GAAG,YAAY,GAAG,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;CACtE,CAAC;AASD;CACA;CACA;CACA;CACO,SAAS,uBAAuB,CAAC,MAAM,EAAE;CAChD,CAAC,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;CAChC,CAAC,IAAI,QAAQ,KAAK,IAAI,EAAE;CAExB,EAAE,MAAM,iBAAiB,GAAG,eAAe,CAAC;CAE5C,EAAE,mBAAmB,CAAC,IAAI,CAAC,CAAC;CAC5B,EAAE,IAAI;CACN,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;CACvB,GAAG,SAAS;CAEZ,GAAG,mBAAmB,CAAC,iBAAiB,CAAC,CAAC;CAC1C,GAAG;CACH,EAAE;CACF,CAAC;AACD;CACA;CACA;CACA;CACA;CACO,SAAS,uBAAuB,CAAC,MAAM,EAAE;CAChD,CAAC,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;AAChC;CACA,CAAC,IAAI,QAAQ,KAAK,IAAI,EAAE;CACxB,EAAE,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;AACzB;CACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;CAC/C,GAAG,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;CAChC,GAAG;CACH,EAAE;CACF,CAAC;AACD;CACA;CACA;CACA;CACA;CACA;CACO,SAAS,uBAAuB,CAAC,MAAM,EAAE,UAAU,GAAG,KAAK,EAAE;CACpE,CAAC,IAAI,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC;CAC3B,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;AACnC;CACA,CAAC,OAAO,MAAM,KAAK,IAAI,EAAE;CACzB,EAAE,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;CACzB,EAAE,cAAc,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;CACrC,EAAE,MAAM,GAAG,IAAI,CAAC;CAChB,EAAE;CACF,CAAC;AACD;CACA;CACA;CACA;CACA;CACO,SAAS,6BAA6B,CAAC,MAAM,EAAE;CACtD,CAAC,IAAI,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC;AAC3B;CACA,CAAC,OAAO,MAAM,KAAK,IAAI,EAAE;CACzB,EAAE,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;CACzB,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,aAAa,MAAM,CAAC,EAAE;CACxC,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC;CAC1B,GAAG;CACH,EAAE,MAAM,GAAG,IAAI,CAAC;CAChB,EAAE;CACF,CAAC;AACD;CACA;CACA;CACA;CACA;CACA;CACO,SAAS,cAAc,CAAC,MAAM,EAAE,UAAU,GAAG,IAAI,EAAE;CAC1D,CAAC,IAAI,OAAO,GAAG,KAAK,CAAC;AACrB;CACA,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,WAAW,MAAM,CAAC,KAAK,MAAM,CAAC,WAAW,KAAK,IAAI,EAAE;CACpF;CACA,EAAE,IAAI,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC;CAChC,EAAE,IAAI,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC;AAC7B;CACA,EAAE,OAAO,IAAI,KAAK,IAAI,EAAE;CACxB;CACA,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,GAAG,GAAG,IAAI,gCAAgC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;AACzF;CACA,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;CACjB,GAAG,IAAI,GAAG,IAAI,CAAC;CACf,GAAG;AACH;CACA,EAAE,OAAO,GAAG,IAAI,CAAC;CACjB,EAAE;AACF;CACA,CAAC,uBAAuB,CAAC,MAAM,EAAE,UAAU,IAAI,CAAC,OAAO,CAAC,CAAC;CACzD,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC;CACjC,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;CAC7B,CAAC,iBAAiB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;AACtC;CACA,CAAC,IAAI,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;AACtC;CACA,CAAC,IAAI,WAAW,KAAK,IAAI,EAAE;CAC3B,EAAE,KAAK,MAAM,UAAU,IAAI,WAAW,EAAE;CACxC,GAAG,UAAU,CAAC,IAAI,EAAE,CAAC;CACrB,GAAG;CACH,EAAE;AACF;CACA,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC;AACjC;CACA,CAAC,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAC5B;CACA;CACA,CAAC,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,CAAC,KAAK,KAAK,IAAI,EAAE;CAC/C,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC;CACxB,EAAE;AAKF;CACA;CACA,CAAC,MAAM,CAAC,IAAI;CACZ,EAAE,MAAM,CAAC,IAAI;CACb,EAAE,MAAM,CAAC,QAAQ;CACjB,EAAE,MAAM,CAAC,GAAG;CACZ,EAAE,MAAM,CAAC,IAAI;CACb,EAAE,MAAM,CAAC,MAAM;CACf,EAAE,MAAM,CAAC,EAAE;CACX,EAAE,MAAM,CAAC,WAAW;CACpB,EAAE,MAAM,CAAC,SAAS;CAClB,GAAG,IAAI,CAAC;CACR,CAAC;AACD;CACA;CACA;CACA;CACA;CACA;CACO,SAAS,aAAa,CAAC,MAAM,EAAE;CACtC,CAAC,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;CAC5B,CAAC,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;CACxB,CAAC,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;AACxB;CACA,CAAC,IAAI,IAAI,KAAK,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;CACrC,CAAC,IAAI,IAAI,KAAK,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACrC;CACA,CAAC,IAAI,MAAM,KAAK,IAAI,EAAE;CACtB,EAAE,IAAI,MAAM,CAAC,KAAK,KAAK,MAAM,EAAE,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;CACnD,EAAE,IAAI,MAAM,CAAC,IAAI,KAAK,MAAM,EAAE,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;CACjD,EAAE;CACF;;CCveA,IAAIC,sBAAoB,GAAG,KAAK,CAAC;AAEjC;CACA;CACA,IAAI,0BAA0B,GAAG,EAAE,CAAC;AAGpC;CACA,SAAS,mBAAmB,GAAG;CAC/B,CAACA,sBAAoB,GAAG,KAAK,CAAC;CAC9B,CAAC,MAAM,KAAK,GAAG,0BAA0B,CAAC,KAAK,EAAE,CAAC;CAClD,CAAC,0BAA0B,GAAG,EAAE,CAAC;CACjC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;CAChB,CAAC;AAQD;CACA;CACA;CACA;CACO,SAAS,gBAAgB,CAAC,EAAE,EAAE;CACrC,CAAC,IAAI,CAACA,sBAAoB,EAAE;CAC5B,EAAEA,sBAAoB,GAAG,IAAI,CAAC;CAC9B,EAAE,cAAc,CAAC,mBAAmB,CAAC,CAAC;CACtC,EAAE;CACF,CAAC,0BAA0B,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;CACrC;;CCvCA;CA4CA;CACA,IAAI,oBAAoB,GAAG,KAAK,CAAC;AACjC;CACO,IAAI,kBAAkB,GAAG,KAAK,CAAC;AAEtC;CACA;CACO,SAAS,sBAAsB,CAAC,KAAK,EAAE;CAC9C,CAAC,kBAAkB,GAAG,KAAK,CAAC;CAC5B,CAAC;AAMD;CACA;AACA;CACA;CACA,IAAI,mBAAmB,GAAG,EAAE,CAAC;AAC7B;CACA,IAAI,WAAW,GAAG,CAAC,CAAC;CACpB;CACA,IAAI,gBAAgB,GAAG,EAAE,CAAC;CAC1B;AACA;CACA;CACO,IAAI,eAAe,GAAG,IAAI,CAAC;AAClC;CACA;CACO,SAAS,mBAAmB,CAAC,QAAQ,EAAE;CAC9C,CAAC,eAAe,GAAG,QAAQ,CAAC;CAC5B,CAAC;AACD;CACA;CACO,IAAI,aAAa,GAAG,IAAI,CAAC;AAChC;CACA;CACO,SAAS,iBAAiB,CAAC,MAAM,EAAE;CAC1C,CAAC,aAAa,GAAG,MAAM,CAAC;CACxB,CAAC;AACD;CACA;CACA;CACA;CACA;CACA;CACO,IAAI,eAAe,GAAG,IAAI,CAAC;AAClC;CACA;CACA;CACA;CACO,SAAS,mBAAmB,CAAC,OAAO,EAAE;CAC7C,CAAC,eAAe,GAAG,OAAO,CAAC;CAC3B,CAAC;AACD;CACA;CACA;CACA;CACA;CACA;CACA;CACO,IAAI,QAAQ,GAAG,IAAI,CAAC;AAC3B;CACA,IAAI,YAAY,GAAG,CAAC,CAAC;AACrB;CACA;CACA;CACA;CACA;CACA;CACO,IAAI,gBAAgB,GAAG,IAAI,CAAC;AACnC;CACA;CACO,SAAS,oBAAoB,CAAC,KAAK,EAAE;CAC5C,CAAC,gBAAgB,GAAG,KAAK,CAAC;CAC1B,CAAC;AACD;CACA;CACA,IAAI,eAAe,GAAG,CAAC,CAAC;AACxB;CACA;CACA;CACO,IAAI,aAAa,GAAG,KAAK,CAAC;AAIjC;CACA;CACA;CACO,IAAI,iBAAiB,GAAG,IAAI,CAAC;AAuBpC;CACO,SAAS,iBAAiB,GAAG;CACpC,CAAC,OAAO,EAAE,eAAe,CAAC;CAC1B,CAAC;AACD;CACA;CACO,SAAS,QAAQ,GAAG;CAC3B,CAAC,OAAO,iBAAiB,KAAK,IAAI,IAAI,iBAAiB,CAAC,CAAC,KAAK,IAAI,CAAC;CACnE,CAAC;AACD;CACA;CACA;CACA;CACA;CACA;CACA;CACO,SAAS,eAAe,CAAC,QAAQ,EAAE;CAC1C,CAAC,IAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC;AACxB;CACA,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,MAAM,CAAC,EAAE;CAC5B,EAAE,OAAO,IAAI,CAAC;CACd,EAAE;AACF;CACA,CAAC,IAAI,CAAC,KAAK,GAAG,WAAW,MAAM,CAAC,EAAE;CAClC,EAAE,IAAI,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC;CACnC,EAAE,IAAI,UAAU,GAAG,CAAC,KAAK,GAAG,OAAO,MAAM,CAAC,CAAC;AAC3C;CACA,EAAE,IAAI,YAAY,KAAK,IAAI,EAAE;CAC7B,GAAG,IAAI,CAAC,CAAC;AACT;CACA,GAAG,IAAI,CAAC,KAAK,GAAG,YAAY,MAAM,CAAC,EAAE;CACrC,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;CAC9C,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,KAAK,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;CACvD,KAAK;AACL;CACA,IAAI,QAAQ,CAAC,CAAC,IAAI,YAAY,CAAC;CAC/B,IAAI;AACJ;CACA,GAAG,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;CAC7C,IAAI,IAAI,UAAU,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AACrC;CACA,IAAI,IAAI,eAAe,yBAAyB,UAAU,EAAE,EAAE;CAC9D,KAAK,cAAc,yBAAyB,UAAU,EAAE,CAAC;CACzD,KAAK;AACL;CACA;CACA;CACA;CACA,IAAI;CACJ,KAAK,UAAU;CACf,KAAK,aAAa,KAAK,IAAI;CAC3B,KAAK,CAAC,aAAa;CACnB,KAAK,CAAC,UAAU,EAAE,SAAS,EAAE,QAAQ,CAAC,QAAQ,CAAC;CAC/C,MAAM;CACN,KAAK,CAAC,UAAU,CAAC,SAAS,KAAK,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;CAClD,KAAK;AACL;CACA,IAAI,IAAI,UAAU,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,EAAE;CAC/C,KAAK,OAAO,IAAI,CAAC;CACjB,KAAK;CACL,IAAI;CACJ,GAAG;AACH;CACA;CACA,EAAE,IAAI,CAAC,UAAU,EAAE;CACnB,GAAG,iBAAiB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;CACtC,GAAG;CACH,EAAE;AACF;CACA,CAAC,OAAO,KAAK,CAAC;CACd,CAAC;AACD;CACA;CACA;CACA;CACA;CACA;CACA,SAAS,YAAY,CAAC,KAAK,EAAE,MAAM,EAAE,iBAAiB,EAAE;CACxD;CACA,CAAsE;CACtE,EAAE,MAAM,KAAK,CAAC;CACd,EAAE;CAoDF,CAAC;AACD;CACA;CACA;CACA;CACA;CACA;CACO,SAAS,eAAe,CAAC,QAAQ,EAAE;CAC1C,CAAC,IAAI,aAAa,GAAG,QAAQ,CAAC;CAC9B,CAAC,IAAI,qBAAqB,GAAG,YAAY,CAAC;CAC1C,CAAC,IAAI,yBAAyB,GAAG,gBAAgB,CAAC;CAClD,CAAC,IAAI,iBAAiB,GAAG,eAAe,CAAC;CACzC,CAAC,IAAI,sBAAsB,GAAG,aAAa,CAAC;CAC5C,CAAC,IAAI,oBAAoB,GAAG,eAAe,CAAC;CAC5C,CAAC,IAAI,0BAA0B,GAAG,iBAAiB,CAAC;CACpD,CAAC,IAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC;AACxB;CACA,CAAC,QAAQ,kCAAkC,IAAI,CAAC,CAAC;CACjD,CAAC,YAAY,GAAG,CAAC,CAAC;CAClB,CAAC,gBAAgB,GAAG,IAAI,CAAC;CACzB,CAAC,eAAe,GAAG,CAAC,KAAK,IAAI,aAAa,GAAG,WAAW,CAAC,MAAM,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC;CACnF,CAAC,aAAa,GAAG,CAAC,kBAAkB,IAAI,CAAC,KAAK,GAAG,OAAO,MAAM,CAAC,CAAC;CAChE,CAAC,eAAe,GAAG,IAAI,CAAC;CACxB,CAAC,iBAAiB,GAAG,QAAQ,CAAC,GAAG,CAAC;AAClC;CACA,CAAC,IAAI;CACL,EAAE,IAAI,MAAM,2BAA2B,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE,GAAG,CAAC;CAC1D,EAAE,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;AAC3B;CACA,EAAE,IAAI,QAAQ,KAAK,IAAI,EAAE;CACzB,GAAG,IAAI,CAAC,CAAC;AACT;CACA,GAAG,gBAAgB,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;AAC5C;CACA,GAAG,IAAI,IAAI,KAAK,IAAI,IAAI,YAAY,GAAG,CAAC,EAAE;CAC1C,IAAI,IAAI,CAAC,MAAM,GAAG,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC;CACjD,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;CAC1C,KAAK,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;CAC1C,KAAK;CACL,IAAI,MAAM;CACV,IAAI,QAAQ,CAAC,IAAI,GAAG,IAAI,GAAG,QAAQ,CAAC;CACpC,IAAI;AACJ;CACA,GAAG,IAAI,CAAC,aAAa,EAAE;CACvB,IAAI,KAAK,CAAC,GAAG,YAAY,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;CACjD,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,KAAK,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;CAC/C,KAAK;CACL,IAAI;CACJ,GAAG,MAAM,IAAI,IAAI,KAAK,IAAI,IAAI,YAAY,GAAG,IAAI,CAAC,MAAM,EAAE;CAC1D,GAAG,gBAAgB,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;CAC5C,GAAG,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC;CAC9B,GAAG;AACH;CACA,EAAE,OAAO,MAAM,CAAC;CAChB,EAAE,SAAS;CACX,EAAE,QAAQ,GAAG,aAAa,CAAC;CAC3B,EAAE,YAAY,GAAG,qBAAqB,CAAC;CACvC,EAAE,gBAAgB,GAAG,yBAAyB,CAAC;CAC/C,EAAE,eAAe,GAAG,iBAAiB,CAAC;CACtC,EAAE,aAAa,GAAG,sBAAsB,CAAC;CACzC,EAAE,eAAe,GAAG,oBAAoB,CAAC;CACzC,EAAE,iBAAiB,GAAG,0BAA0B,CAAC;CACjD,EAAE;CACF,CAAC;AACD;CACA;CACA;CACA;CACA;CACA;CACA;CACA,SAAS,eAAe,CAAC,MAAM,EAAE,UAAU,EAAE;CAC7C,CAAC,IAAI,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC;CACtC,CAAC,IAAI,SAAS,KAAK,IAAI,EAAE;CACzB,EAAE,IAAI,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;CACxC,EAAE,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;CACpB,GAAG,IAAI,UAAU,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;CACzC,GAAG,IAAI,UAAU,KAAK,CAAC,EAAE;CACzB,IAAI,SAAS,GAAG,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC;CAC5C,IAAI,MAAM;CACV;CACA,IAAI,SAAS,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC;CAC7C,IAAI,SAAS,CAAC,GAAG,EAAE,CAAC;CACpB,IAAI;CACJ,GAAG;CACH,EAAE;CACF;CACA;CACA,CAAC;CACD,EAAE,SAAS,KAAK,IAAI;CACpB,EAAE,CAAC,UAAU,CAAC,CAAC,GAAG,OAAO,MAAM,CAAC;CAChC;CACA;CACA;CACA,GAAG,QAAQ,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;CACvD,GAAG;CACH,EAAE,iBAAiB,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;CAC7C;CACA;CACA,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,OAAO,GAAG,YAAY,CAAC,MAAM,CAAC,EAAE;CACvD,GAAG,UAAU,CAAC,CAAC,IAAI,YAAY,CAAC;CAChC,GAAG;CACH,EAAE,gBAAgB,0BAA0B,UAAU,GAAG,CAAC,CAAC,CAAC;CAC5D,EAAE;CACF,CAAC;AACD;CACA;CACA;CACA;CACA;CACA;CACO,SAAS,gBAAgB,CAAC,MAAM,EAAE,WAAW,EAAE;CACtD,CAAC,IAAI,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC;CAChC,CAAC,IAAI,YAAY,KAAK,IAAI,EAAE,OAAO;AACnC;CACA,CAAC,KAAK,IAAI,CAAC,GAAG,WAAW,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;CACzD,EAAE,eAAe,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;CAC3C,EAAE;CACF,CAAC;AACD;CACA;CACA;CACA;CACA;CACO,SAAS,aAAa,CAAC,MAAM,EAAE;CACtC,CAAC,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC;AACtB;CACA,CAAC,IAAI,CAAC,KAAK,GAAG,SAAS,MAAM,CAAC,EAAE;CAChC,EAAE,OAAO;CACT,EAAE;AACF;CACA,CAAC,iBAAiB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAClC;CACA,CAAC,IAAI,eAAe,GAAG,aAAa,CAAC;AAErC;CACA,CAAC,aAAa,GAAG,MAAM,CAAC;AAMxB;CACA,CAAC,IAAI;CACL,EAAE,IAAI,CAAC,KAAK,GAAG,YAAY,MAAM,CAAC,EAAE;CACpC,GAAG,6BAA6B,CAAC,MAAM,CAAC,CAAC;CACzC,GAAG,MAAM;CACT,GAAG,uBAAuB,CAAC,MAAM,CAAC,CAAC;CACnC,GAAG;CACH,EAAE,uBAAuB,CAAC,MAAM,CAAC,CAAC;AAClC;CACA,EAAE,uBAAuB,CAAC,MAAM,CAAC,CAAC;CAClC,EAAE,IAAI,QAAQ,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;CACzC,EAAE,MAAM,CAAC,QAAQ,GAAG,OAAO,QAAQ,KAAK,UAAU,GAAG,QAAQ,GAAG,IAAI,CAAC;CACrE,EAAE,MAAM,CAAC,OAAO,GAAG,eAAe,CAAC;AACnC;CACA,EAAE,IAAI,GAAG,EAAE,CAER;CACH,EAAE,CAAC,OAAO,KAAK,EAAE;CACjB,EAAE,YAAY,uBAAuB,KAAK,CAAqC,CAAC,CAAC;CACjF,EAAE,SAAS;CACX,EAAE,aAAa,GAAG,eAAe,CAAC;CAKlC,EAAE;CACF,CAAC;AACD;CACA,SAAS,mBAAmB,GAAG;CAC/B,CAAC,IAAI,WAAW,GAAG,IAAI,EAAE;CACzB,EAAE,WAAW,GAAG,CAAC,CAAC;CAClB,EAgBS;CACT,GAAGC,4BAA8B,EAAE,CAAC;CACpC,GAAG;CACH,EAAE;CACF,CAAC,WAAW,EAAE,CAAC;CACf,CAAC;AACD;CACA;CACA;CACA;CACA;CACA,SAAS,yBAAyB,CAAC,YAAY,EAAE;CACjD,CAAC,IAAI,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC;CAClC,CAAC,IAAI,MAAM,KAAK,CAAC,EAAE;CACnB,EAAE,OAAO;CACT,EAAE;CACF,CAAC,mBAAmB,EAAE,CAAC;AACvB;CACA,CAAC,IAAI,0BAA0B,GAAG,kBAAkB,CAAC;CACrD,CAAC,kBAAkB,GAAG,IAAI,CAAC;AAC3B;CACA,CAAC,IAAI;CACL,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;CACnC,GAAG,IAAI,MAAM,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAChC;CACA,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,MAAM,CAAC,EAAE;CACjC,IAAI,MAAM,CAAC,CAAC,IAAI,KAAK,CAAC;CACtB,IAAI;AACJ;CACA;CACA,GAAG,IAAI,iBAAiB,GAAG,EAAE,CAAC;AAC9B;CACA,GAAG,eAAe,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;CAC9C,GAAG,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;CAC3C,GAAG;CACH,EAAE,SAAS;CACX,EAAE,kBAAkB,GAAG,0BAA0B,CAAC;CAClD,EAAE;CACF,CAAC;AACD;CACA;CACA;CACA;CACA;CACA,SAAS,oBAAoB,CAAC,OAAO,EAAE;CACvC,CAAC,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;CAC7B,CAAC,IAAI,MAAM,KAAK,CAAC,EAAE,OAAO;AAC1B;CACA,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;CAClC,EAAE,IAAI,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AAC1B;CACA,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,eAAe,CAAC,MAAM,CAAC,EAAE;CACzE,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC;AACzB;CACA;CACA;CACA;CACA;CACA;CACA,GAAG,IAAI,MAAM,CAAC,IAAI,KAAK,IAAI,IAAI,MAAM,CAAC,KAAK,KAAK,IAAI,IAAI,MAAM,CAAC,WAAW,KAAK,IAAI,EAAE;CACrF,IAAI,IAAI,MAAM,CAAC,QAAQ,KAAK,IAAI,EAAE;CAClC;CACA,KAAK,aAAa,CAAC,MAAM,CAAC,CAAC;CAC3B,KAAK,MAAM;CACX;CACA,KAAK,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC;CACtB,KAAK;CACL,IAAI;CACJ,GAAG;CACH,EAAE;CACF,CAAC;AACD;CACA,SAAS,gBAAgB,GAAG;CAC5B,CAAC,oBAAoB,GAAG,KAAK,CAAC;CAC9B,CAAC,IAAI,WAAW,GAAG,IAAI,EAAE;CACzB,EAAE,OAAO;CACT,EAAE;CACF,CAAC,MAAM,4BAA4B,GAAG,mBAAmB,CAAC;CAC1D,CAAC,mBAAmB,GAAG,EAAE,CAAC;CAC1B,CAAC,yBAAyB,CAAC,4BAA4B,CAAC,CAAC;CACzD,CAAC,IAAI,CAAC,oBAAoB,EAAE;CAC5B,EAAE,WAAW,GAAG,CAAC,CAAC;CAIlB,EAAE;CACF,CAAC;AACD;CACA;CACA;CACA;CACA;CACO,SAAS,eAAe,CAAC,MAAM,EAAE;CACxC,CAAyC;CACzC,EAAE,IAAI,CAAC,oBAAoB,EAAE;CAC7B,GAAG,oBAAoB,GAAG,IAAI,CAAC;CAC/B,GAAG,cAAc,CAAC,gBAAgB,CAAC,CAAC;CACpC,GAAG;CACH,EAAE;AACF;CACA,CAAC,IAAI,MAAM,GAAG,MAAM,CAAC;AACrB;CACA,CAAC,OAAO,MAAM,CAAC,MAAM,KAAK,IAAI,EAAE;CAChC,EAAE,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;CACzB,EAAE,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC;AACvB;CACA,EAAE,IAAI,CAAC,KAAK,IAAI,WAAW,GAAG,aAAa,CAAC,MAAM,CAAC,EAAE;CACrD,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK,MAAM,CAAC,EAAE,OAAO;CACrC,GAAG,MAAM,CAAC,CAAC,IAAI,KAAK,CAAC;CACrB,GAAG;CACH,EAAE;AACF;CACA,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;CAClC,CAAC;AACD;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,SAAS,eAAe,CAAC,MAAM,EAAE,iBAAiB,EAAE;CACpD,CAAC,IAAI,cAAc,GAAG,MAAM,CAAC,KAAK,CAAC;CACnC,CAAC,IAAI,OAAO,GAAG,EAAE,CAAC;AAClB;CACA,CAAC,SAAS,EAAE,OAAO,cAAc,KAAK,IAAI,EAAE;CAC5C,EAAE,IAAI,KAAK,GAAG,cAAc,CAAC,CAAC,CAAC;CAC/B,EAAE,IAAI,SAAS,GAAG,CAAC,KAAK,GAAG,aAAa,MAAM,CAAC,CAAC;CAChD,EAAE,IAAI,mBAAmB,GAAG,SAAS,IAAI,CAAC,KAAK,GAAG,KAAK,MAAM,CAAC,CAAC;AAC/D;CACA,EAAE,IAAI,CAAC,mBAAmB,IAAI,CAAC,KAAK,GAAG,KAAK,MAAM,CAAC,EAAE;CACrD,GAAG,IAAI,CAAC,KAAK,GAAG,aAAa,MAAM,CAAC,EAAE;CACtC,IAAI,IAAI,SAAS,EAAE;CACnB,KAAK,cAAc,CAAC,CAAC,IAAI,KAAK,CAAC;CAC/B,KAAK,MAAM,IAAI,eAAe,CAAC,cAAc,CAAC,EAAE;CAChD,KAAK,aAAa,CAAC,cAAc,CAAC,CAAC;CACnC,KAAK;AACL;CACA,IAAI,IAAI,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC;AACrC;CACA,IAAI,IAAI,KAAK,KAAK,IAAI,EAAE;CACxB,KAAK,cAAc,GAAG,KAAK,CAAC;CAC5B,KAAK,SAAS;CACd,KAAK;CACL,IAAI,MAAM,IAAI,CAAC,KAAK,GAAG,MAAM,MAAM,CAAC,EAAE;CACtC,IAAI,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;CACjC,IAAI;CACJ,GAAG;AACH;CACA,EAAE,IAAI,OAAO,GAAG,cAAc,CAAC,IAAI,CAAC;AACpC;CACA,EAAE,IAAI,OAAO,KAAK,IAAI,EAAE;CACxB,GAAG,IAAI,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC;AACtC;CACA,GAAG,OAAO,MAAM,KAAK,IAAI,EAAE;CAC3B,IAAI,IAAI,MAAM,KAAK,MAAM,EAAE;CAC3B,KAAK,MAAM,SAAS,CAAC;CACrB,KAAK;CACL,IAAI,IAAI,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC;CACrC,IAAI,IAAI,cAAc,KAAK,IAAI,EAAE;CACjC,KAAK,cAAc,GAAG,cAAc,CAAC;CACrC,KAAK,SAAS,SAAS,CAAC;CACxB,KAAK;CACL,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;CAC3B,IAAI;CACJ,GAAG;AACH;CACA,EAAE,cAAc,GAAG,OAAO,CAAC;CAC3B,EAAE;AACF;CACA;CACA;CACA,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;CAC1C,EAAE,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;CACrB,EAAE,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;CAChC,EAAE,eAAe,CAAC,KAAK,EAAE,iBAAiB,CAAC,CAAC;CAC5C,EAAE;CACF,CAAC;AAqDD;CACA;CACA;CACA;CACA;CACA;CACO,SAAS,GAAG,CAAC,MAAM,EAAE;CAC5B,CAAC,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC;CACtB,CAAC,IAAI,UAAU,GAAG,CAAC,KAAK,GAAG,OAAO,MAAM,CAAC,CAAC;AAC1C;CACA;CACA;CACA,CAAC,IAAI,UAAU,IAAI,CAAC,KAAK,GAAG,SAAS,MAAM,CAAC,EAAE;CAC9C,EAAE,IAAI,KAAK,GAAG,eAAe,yBAAyB,MAAM,EAAE,CAAC;CAC/D;CACA,EAAE,eAAe,yBAAyB,MAAM,EAAE,CAAC;CACnD,EAAE,OAAO,KAAK,CAAC;CACf,EAAE;AAKF;CACA;CACA,CAAC,IAAI,eAAe,KAAK,IAAI,EAAE;CAC/B,EAAE,IAAI,eAAe,KAAK,IAAI,IAAI,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;CACpE,GAAGC,uBAAyB,EAAE,CAAC;CAC/B,GAAG;CACH,EAAE,IAAI,IAAI,GAAG,eAAe,CAAC,IAAI,CAAC;AAClC;CACA;CACA;CACA;CACA,EAAE,IAAI,QAAQ,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,MAAM,EAAE;CAC3E,GAAG,YAAY,EAAE,CAAC;CAClB,GAAG,MAAM,IAAI,QAAQ,KAAK,IAAI,EAAE;CAChC,GAAG,QAAQ,GAAG,CAAC,MAAM,CAAC,CAAC;CACvB,GAAG,MAAM;CACT,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;CACzB,GAAG;AACH;CACA,EAAE;CACF,GAAG,gBAAgB,KAAK,IAAI;CAC5B,GAAG,aAAa,KAAK,IAAI;CACzB,GAAG,CAAC,aAAa,CAAC,CAAC,GAAG,KAAK,MAAM,CAAC;CAClC,GAAG,CAAC,aAAa,CAAC,CAAC,GAAG,aAAa,MAAM,CAAC;CAC1C,GAAG,gBAAgB,CAAC,QAAQ,CAAC,MAAM,CAAC;CACpC,IAAI;CACJ,GAAG,iBAAiB,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;CAC3C,GAAG,eAAe,CAAC,aAAa,CAAC,CAAC;CAClC,GAAG;CACH,EAAE,MAAM,IAAI,UAAU,2BAA2B,CAAC,MAAM,EAAE,IAAI,KAAK,IAAI,EAAE;CACzE,EAAE,IAAI,OAAO,2BAA2B,MAAM,CAAC,CAAC;CAChD,EAAE,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;AAC9B;CACA,EAAE,IAAI,MAAM,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,CAAC,OAAO,CAAC,EAAE;CAC9D,GAAG,CAAC,MAAM,CAAC,QAAQ,KAAK,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;CAC1C,GAAG;CACH,EAAE;AACF;CACA,CAAC,IAAI,UAAU,EAAE;CACjB,EAAE,OAAO,2BAA2B,MAAM,CAAC,CAAC;AAC5C;CACA,EAAE,IAAI,eAAe,CAAC,OAAO,CAAC,EAAE;CAChC,GAAG,cAAc,CAAC,OAAO,CAAC,CAAC;CAC3B,GAAG;CACH,EAAE;AACF;CACA,CAAC,OAAO,MAAM,CAAC,CAAC,CAAC;CACjB,CAAC;AA0ED;CACA,MAAM,WAAW,GAAG,EAAE,KAAK,GAAG,WAAW,GAAG,KAAK,CAAC,CAAC;AACnD;CACA;CACA;CACA;CACA;CACA;CACO,SAAS,iBAAiB,CAAC,MAAM,EAAE,MAAM,EAAE;CAClD,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,WAAW,IAAI,MAAM,CAAC;CAC9C;;CCn2BA;AAYA;CACA;CACA,IAAI,kBAAkB,CAAC;CACvB;CACA,IAAI,mBAAmB,CAAC;AAoDxB;CACA;CACA;CACA;CACA;CACA;CACA;CACO,SAAS,eAAe,CAAC,IAAI,EAAE;CACtC,CAAC,OAAO,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;CACtC,CAAC;AACD;CACA;CACA;CACA;CACA;CACA;CACA;CACO,SAAS,gBAAgB,CAAC,IAAI,EAAE;CACvC,CAAC,OAAO,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;CACvC,CAAC;AACD;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACO,SAAS,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE;CACrC,CAAiB;CACjB,EAAE,OAAO,eAAe,CAAC,IAAI,CAAC,CAAC;CAC/B,EAAE;CAgBF,CAAC;AA+BD;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACO,SAAS,OAAO,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,OAAO,GAAG,KAAK,EAAE;CAC1D,CAAC,IAAI,YAAY,GAA8B,IAAI,CAAC;AACpD;CACA,CAAC,OAAO,KAAK,EAAE,EAAE;CACjB,EAAE,YAAY,gCAAgC,gBAAgB,CAAC,YAAY,CAAC,CAAC,CAAC;CAC9E,EAAE;AACF;CACA,CAAiB;CACjB,EAAE,OAAO,YAAY,CAAC;CACtB,EAAE;CAeF;;CClLA;AA8CA;CACA;CACA;CACA;CACA;CACA;CACA;CACO,SAAS,YAAY,CAAC,UAAU,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE;CAChE;CACA;CACA;CACA,CAAC,SAAS,cAAc,sBAAsB,KAAK,EAAE;CACrD,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;CACxB;CACA,GAAG,wBAAwB,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;CAC7C,GAAG;CACH,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;CAC3B,GAAG,IAAI,iBAAiB,GAAG,eAAe,CAAC;CAC3C,GAAG,IAAI,eAAe,GAAG,aAAa,CAAC;AACvC;CACA,GAAG,mBAAmB,CAAC,IAAI,CAAC,CAAC;CAC7B,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;CAC3B,GAAG,IAAI;CACP,IAAI,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;CACrC,IAAI,SAAS;CACb,IAAI,mBAAmB,CAAC,iBAAiB,CAAC,CAAC;CAC3C,IAAI,iBAAiB,CAAC,eAAe,CAAC,CAAC;CACvC,IAAI;CACJ,GAAG;CACH,EAAE;AACF;CACA;CACA;CACA;CACA;CACA,CAAC;CACD,EAAE,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC;CAClC,EAAE,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC;CAChC,EAAE,UAAU,KAAK,OAAO;CACxB,GAAG;CACH,EAAE,gBAAgB,CAAC,MAAM;CACzB,GAAG,GAAG,CAAC,gBAAgB,CAAC,UAAU,EAAE,cAAc,EAAE,OAAO,CAAC,CAAC;CAC7D,GAAG,CAAC,CAAC;CACL,EAAE,MAAM;CACR,EAAE,GAAG,CAAC,gBAAgB,CAAC,UAAU,EAAE,cAAc,EAAE,OAAO,CAAC,CAAC;CAC5D,EAAE;AACF;CACA,CAAC,OAAO,cAAc,CAAC;CACvB,CAAC;AAmBD;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACO,SAAS,KAAK,CAAC,UAAU,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE;CAClE,CAAC,IAAI,OAAO,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;CACpC,CAAC,IAAI,cAAc,GAAG,YAAY,CAAC,UAAU,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;AACtE;CACA;CACA,CAAC,IAAI,GAAG,KAAK,QAAQ,CAAC,IAAI,IAAI,GAAG,KAAK,MAAM,IAAI,GAAG,KAAK,QAAQ,EAAE;CAClE,EAAE,QAAQ,CAAC,MAAM;CACjB,GAAG,GAAG,CAAC,mBAAmB,CAAC,UAAU,EAAE,cAAc,EAAE,OAAO,CAAC,CAAC;CAChE,GAAG,CAAC,CAAC;CACL,EAAE;CACF,CAAC;AAeD;CACA;CACA;CACA;CACA;CACA;CACO,SAAS,wBAAwB,CAAC,KAAK,EAAE;CAChD,CAAC,IAAI,eAAe,GAAG,IAAI,CAAC;CAC5B,CAAC,IAAI,cAAc,uBAAuB,CAAC,eAAe,EAAE,aAAa,CAAC;CAC1E,CAAC,IAAI,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC;CAC7B,CAAC,IAAI,IAAI,GAAG,KAAK,CAAC,YAAY,IAAI,IAAI,EAAE,CAAC;CACzC,CAAC,IAAI,cAAc,kCAAkC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;AAC9E;CACA;CACA;CACA;CACA;CACA,CAAC,IAAI,QAAQ,GAAG,CAAC,CAAC;AAClB;CACA;CACA,CAAC,IAAI,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC;AAC/B;CACA,CAAC,IAAI,UAAU,EAAE;CACjB,EAAE,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;CACxC,EAAE;CACF,GAAG,MAAM,KAAK,CAAC,CAAC;CAChB,IAAI,eAAe,KAAK,QAAQ,IAAI,eAAe,yBAAyB,MAAM,CAAC,CAAC;CACpF,IAAI;CACJ;CACA;CACA;CACA;CACA,GAAG,KAAK,CAAC,MAAM,GAAG,eAAe,CAAC;CAClC,GAAG,OAAO;CACV,GAAG;AACH;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;CAClD,EAAE,IAAI,WAAW,KAAK,CAAC,CAAC,EAAE;CAC1B;CACA;CACA,GAAG,OAAO;CACV,GAAG;AACH;CACA,EAAE,IAAI,MAAM,IAAI,WAAW,EAAE;CAC7B,GAAG,QAAQ,GAAG,MAAM,CAAC;CACrB,GAAG;CACH,EAAE;AACF;CACA,CAAC,cAAc,2BAA2B,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;CAC1E;CACA;CACA;CACA,CAAC,IAAI,cAAc,KAAK,eAAe,EAAE,OAAO;AAChD;CACA;CACA,CAAC,eAAe,CAAC,KAAK,EAAE,eAAe,EAAE;CACzC,EAAE,YAAY,EAAE,IAAI;CACpB,EAAE,GAAG,GAAG;CACR,GAAG,OAAO,cAAc,IAAI,cAAc,CAAC;CAC3C,GAAG;CACH,EAAE,CAAC,CAAC;AACJ;CACA;CACA;CACA;CACA;CACA;CACA,CAAC,IAAI,iBAAiB,GAAG,eAAe,CAAC;CACzC,CAAC,IAAI,eAAe,GAAG,aAAa,CAAC;CACrC,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;CAC3B,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;AACzB;CACA,CAAC,IAAI;CACL;CACA;CACA;CACA,EAAE,IAAI,WAAW,CAAC;CAClB;CACA;CACA;CACA,EAAE,IAAI,YAAY,GAAG,EAAE,CAAC;AACxB;CACA,EAAE,OAAO,cAAc,KAAK,IAAI,EAAE;CAClC;CACA,GAAG,IAAI,cAAc;CACrB,IAAI,cAAc,CAAC,YAAY;CAC/B,IAAI,cAAc,CAAC,UAAU;CAC7B,uBAAuB,CAAC,cAAc,EAAE,IAAI;CAC5C,IAAI,IAAI,CAAC;AACT;CACA,GAAG,IAAI;CACP;CACA,IAAI,IAAI,SAAS,GAAG,cAAc,CAAC,IAAI,GAAG,UAAU,CAAC,CAAC;AACtD;CACA,IAAI,IAAI,SAAS,KAAK,SAAS,IAAI,qBAAqB,CAAC,cAAc,EAAE,QAAQ,CAAC,EAAE;CACpF,KAAK,IAAI,QAAQ,CAAC,SAAS,CAAC,EAAE;CAC9B,MAAM,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,SAAS,CAAC;CACpC,MAAM,EAAE,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;CACjD,MAAM,MAAM;CACZ,MAAM,SAAS,CAAC,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;CAC5C,MAAM;CACN,KAAK;CACL,IAAI,CAAC,OAAO,KAAK,EAAE;CACnB,IAAI,IAAI,WAAW,EAAE;CACrB,KAAK,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;CAC9B,KAAK,MAAM;CACX,KAAK,WAAW,GAAG,KAAK,CAAC;CACzB,KAAK;CACL,IAAI;CACJ,GAAG,IAAI,KAAK,CAAC,YAAY,IAAI,cAAc,KAAK,eAAe,IAAI,cAAc,KAAK,IAAI,EAAE;CAC5F,IAAI,MAAM;CACV,IAAI;CACJ,GAAG,cAAc,GAAG,cAAc,CAAC;CACnC,GAAG;AACH;CACA,EAAE,IAAI,WAAW,EAAE;CACnB,GAAG,KAAK,IAAI,KAAK,IAAI,YAAY,EAAE;CACnC;CACA,IAAI,cAAc,CAAC,MAAM;CACzB,KAAK,MAAM,KAAK,CAAC;CACjB,KAAK,CAAC,CAAC;CACP,IAAI;CACJ,GAAG,MAAM,WAAW,CAAC;CACrB,GAAG;CACH,EAAE,SAAS;CACX;CACA,EAAE,KAAK,CAAC,MAAM,GAAG,eAAe,CAAC;CACjC;CACA,EAAE,OAAO,KAAK,CAAC,aAAa,CAAC;CAC7B,EAAE,mBAAmB,CAAC,iBAAiB,CAAC,CAAC;CACzC,EAAE,iBAAiB,CAAC,eAAe,CAAC,CAAC;CACrC,EAAE;CACF;;CC5RA;CACO,SAAS,yBAAyB,CAAC,IAAI,EAAE;CAChD,CAAC,IAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;CAC/C,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;CACvB,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC;CACrB;;CCLA;AAOA;CACA;CACA;CACA;CACA;CACO,SAAS,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE;CACzC,CAAC,IAAI,MAAM,0BAA0B,aAAa,CAAC,CAAC;CACpD,CAAC,IAAI,MAAM,CAAC,WAAW,KAAK,IAAI,EAAE;CAClC,EAAE,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC;CAC7B,EAAE,MAAM,CAAC,SAAS,GAAG,GAAG,CAAC;CACzB,EAAE;CACF,CAAC;AACD;CACA;CACA;CACA;CACA;CACA;CACA;CACO,SAAS,QAAQ,CAAC,OAAO,EAAE,KAAK,EAAE;CACzC,CAAC,IAAI,WAAW,GAAG,CAAC,KAAK,GAAG,iBAAiB,MAAM,CAAC,CAAC;CACrD,CAAC,IAAI,eAAe,GAAG,CAAC,KAAK,GAAG,wBAAwB,MAAM,CAAC,CAAC;AAChE;CACA;CACA,CAAC,IAAI,IAAI,CAAC;AACV;CACA;CACA;CACA;CACA;CACA,CAAC,IAAI,SAAS,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AAC5C;CACA,CAAC,OAAO,MAAM;AAKd;CACA,EAAE,IAAI,IAAI,KAAK,SAAS,EAAE;CAC1B,GAAG,IAAI,GAAG,yBAAyB,CAAC,SAAS,GAAG,OAAO,GAAG,KAAK,GAAG,OAAO,CAAC,CAAC;CAC3E,GAAG,IAAI,CAAC,WAAW,EAAE,IAAI,wBAAwB,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;CACxE,GAAG;AACH;CACA,EAAE,IAAI,KAAK;CACX,GAAG,eAAe,GAAG,QAAQ,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;CAC3E,GAAG,CAAC;AACJ;CACA,EAAE,IAAI,WAAW,EAAE;CACnB,GAAG,IAAI,KAAK,gCAAgC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;CACpE,GAAG,IAAI,GAAG,gCAAgC,KAAK,CAAC,SAAS,CAAC,CAAC;AAC3D;CACA,GAAG,YAAY,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;CAC5B,GAAG,MAAM;CACT,GAAG,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;CAC9B,GAAG;AACH;CACA,EAAE,OAAO,KAAK,CAAC;CACf,EAAE,CAAC;CACH,CAAC;AAsKD;CACA;CACA;CACA;CACA;CACA;CACA;CACO,SAAS,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE;AAMpC;CACA,CAAC,IAAI,MAAM,KAAK,IAAI,EAAE;CACtB;CACA,EAAE,OAAO;CACT,EAAE;AACF;CACA,CAAC,MAAM,CAAC,MAAM,sBAAsB,GAAG,EAAE,CAAC;CAC1C;;CC3PA;AA2CA;CACA;CACA;CACA;CACA;CACA;CACO,SAAS,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE;CACtC;CACA,CAAC,IAAI,GAAG,GAAG,KAAK,IAAI,IAAI,GAAG,EAAE,GAAG,OAAO,KAAK,KAAK,QAAQ,GAAG,KAAK,GAAG,EAAE,GAAG,KAAK,CAAC;CAC/E;CACA,CAAC,IAAI,GAAG,MAAM,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,SAAS,CAAC,EAAE;CAC5C;CACA,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;CACjB,EAAE,IAAI,CAAC,SAAS,GAAG,GAAG,IAAI,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;CAC/C,EAAE;CACF;;CCxBA,IAAI,uBAAuB,GAAG,KAAK,CAAC;AACpC;CACO,SAAS,uBAAuB,GAAG;CAC1C,CAAC,IAAI,CAAC,uBAAuB,EAAE;CAC/B,EAAE,uBAAuB,GAAG,IAAI,CAAC;CACjC,EAAE,QAAQ,CAAC,gBAAgB;CAC3B,GAAG,OAAO;CACV,GAAG,CAAC,GAAG,KAAK;CACZ;CACA;CACA,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,MAAM;CACjC,KAAK,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE;CAChC,MAAM,KAAK,MAAM,CAAC,kCAAkC,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE;CAC3E;CACA,OAAO,CAAC,CAAC,MAAM,IAAI,CAAC;CACpB,OAAO;CACP,MAAM;CACN,KAAK,CAAC,CAAC;CACP,IAAI;CACJ;CACA,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE;CACpB,GAAG,CAAC;CACJ,EAAE;CACF;;CC9BA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACO,SAAS,+BAA+B,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,GAAG,OAAO,EAAE;CAC7F,CAAC,OAAO,CAAC,gBAAgB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;CAC1C;CACA,CAAC,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC;CAC7B,CAAC,IAAI,IAAI,EAAE;CACX;CACA;CACA,EAAE,OAAO,CAAC,MAAM,GAAG,MAAM;CACzB,GAAG,IAAI,EAAE,CAAC;CACV,GAAG,QAAQ,EAAE,CAAC;CACd,GAAG,CAAC;CACJ,EAAE,MAAM;CACR;CACA,EAAE,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC;CAC5B,EAAE;AACF;CACA,CAAC,uBAAuB,EAAE,CAAC;CAC3B;;CC3CA;CACA;CACA;CACA;CACA;CACA;CACO,SAAS,UAAU,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE;CAClD,CAAC,IAAI,KAAK,GAAG,QAAQ,EAAE,CAAC;AACxB;CACA,CAAC,+BAA+B,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM;AAKvD;CACA;CACA,EAAE,IAAI,KAAK,GAAG,mBAAmB,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;CAChF,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;AACb;CACA;CACA;CACA,EAAE,IAAI,KAAK,IAAI,KAAK,MAAM,KAAK,GAAG,GAAG,EAAE,CAAC,EAAE;CAC1C;CACA,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;CAC7B,GAAG;CACH,EAAE,CAAC,CAAC;AACJ;CACA,CAAC,aAAa,CAAC,MAAM;AAKrB;CACA,EAAE,IAAI,KAAK,GAAG,GAAG,EAAE,CAAC;AAQpB;CACA,EAAE,IAAI,mBAAmB,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;CACtE;CACA,GAAG,OAAO;CACV,GAAG;AACH;CACA,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,MAAM,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;CACvD;CACA;CACA,GAAG,OAAO;CACV,GAAG;AACH;CACA;CACA;CACA,EAAE,IAAI,KAAK,KAAK,KAAK,CAAC,KAAK,EAAE;CAC7B;CACA,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;CAC7B,GAAG;CACH,EAAE,CAAC,CAAC;CACJ,CAAC;AAkJD;CACA;CACA;CACA;CACA,SAAS,mBAAmB,CAAC,KAAK,EAAE;CACpC,CAAC,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;CACvB,CAAC,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,OAAO,CAAC;CAC9C,CAAC;AACD;CACA;CACA;CACA;CACA,SAAS,SAAS,CAAC,KAAK,EAAE;CAC1B,CAAC,OAAO,KAAK,KAAK,EAAE,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC;CACrC;;;;;CCnOM,CAAA,IAAA,SAAS,iBAAG,EAAE,CAAA,CAAA;CACd,CAAA,IAAA,WAAW,iBAAG,EAAE,CAAA,CAAA;CAChB,CAAA,IAAA,UAAU,iBAAG,SAAS,CAAA,CAAA;;WAEjB,eAAe,GAAA;GACtB,MAAM,CAAC,OAAO,CAAC,WAAW;;CACtB,IAAA,IAAI,EAAE,gBAAgB;CAAE,IAAA,IAAI,MAAE,SAAS,CAAA;CAAE,IAAA,UAAU,MAAV,UAAU,CAAA;;KACpD,QAAQ,KAAA;SACH,QAAQ,IAAI,QAAQ,CAAC,WAAW,EAAA;UAClC,WAAW,EAAG,QAAQ,CAAC,WAAW,CAAA,CAAA;;CAElC,KAAAC,GAAA,CAAA,WAAW,EAAG,yBAAyB,CAAA,CAAA;;;;;;WAMtC,cAAc,GAAA;CACrB,EAAAA,GAAA,CAAA,UAAU,MAAG,UAAU,CAAA,KAAK,SAAS,GAAG,SAAS,GAAG,SAAS,CAAA,CAAA;;;;;;;;;;;;;;;;sCAOd,UAAU,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,CAAA;CAE9C,EAAAC,QAAA,CAAA,MAAA,EAAA,CAAA,UAAA,EAAA,CAAAC,GAAA,CAAA,UAAU,CAAK,KAAA,SAAS,GAAG,SAAS,GAAG,SAAS,KAAA,EAAA,CAAA,CAAA,CAAA,CAAA;wCAE5C,WAAW,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,CAAA;;;CALN,CAAAC,UAAA,CAAA,QAAA,EAAA,MAAAD,GAAA,CAAA,SAAS,oBAAT,SAAS,EAAA,OAAA,CAAA,CAAA,CAAA;yBACb,eAAe,CAAA,CAAA;2BACf,cAAc,CAAA,CAAA;;;;AC1B7B,OAAC,GAAG,GAAG,IAAIE,KAAG,CAAC;CACpB,EAAE,MAAM,EAAE,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC;CAChD,CAAC;;;;;;;;"}